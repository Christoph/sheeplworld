{"version":3,"sources":["src/app.ts","src/environment.ts","src/main.ts","src/navbar.ts","src/helper/sampling.ts","src/helper/vector.ts","src/empty/no-selection.ts","src/hosts/generic.ts","src/hosts/sheep.ts","src/hosts/vision.ts","src/charts/dual-bar-chart.ts","src/charts/dual-stacked-bar-chart.ts","src/charts/dynamic-stacked-bar-chart.ts","src/charts/line-chart-focus.ts","src/charts/line-chart-gauss.ts","src/charts/line-chart-live.ts","src/charts/parallel-coordinates-gauss.ts","src/charts/parallel-coordinates-vertical.ts","src/charts/spatial-grid.ts","src/charts/stacked-bar-chart.ts","src/resources/index.ts","src/models/genetic.ts","src/models/sir.ts","src/models/small-world.ts","src/models/spatial-migration.ts","src/models/spatial-sir.ts","src/simulation/playground.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {Router, RouterConfiguration} from \"aurelia-router\"\n\nexport class App {\n  router = Router;\n\n  configureRouter(config: RouterConfiguration, router) {\n      config.title = \"Sheepl World\";\n      config.map([\n          // { route: \"\", moduleId: \"empty/no-selection\", nav: true, title: \"Select\" },\n          { route: \"\", moduleId: \"simulation/playground\", nav: true, title: \"Play\", name: \"play\" }\n      ]);\n\n      this.router = router;\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin(\"aurelia-computed\")\n    .plugin(\"d3-extended\")\n    .plugin(\"d3-random\")\n    .plugin(\"aurelia-bootstrap\")\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {bindable} from 'aurelia-framework';\n\nexport class NavBar {\n  @bindable router = null;\n}\n","// This magic line removed the error messages for numeric\ndeclare var lobos: any;\n\nexport class Sampling {\n  constructor(private type) {\n  }\n\n  get_points(n_samples, dimension) {\n    if(this.type == \"sobol\") {\n      let seq = lobos.Sobol(dimension)\n\n      return seq.take(n_samples)\n    }\n  }\n}\n","export class Vector {\r\n  constructor(public x, public y) {\r\n  }\r\n\r\n  add(v: Vector|number) {\r\n    if (v instanceof Vector) {\r\n      this.x = this.x + v.x\r\n      this.y = this.y + v.y;\r\n\r\n      return this\r\n    }\r\n    else {\r\n      this.x = this.x + v\r\n      this.y = this.y + v\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  subtract(v: Vector|number) {\r\n    if (v instanceof Vector) {\r\n      this.x = this.x - v.x\r\n      this.y = this.y - v.y\r\n\r\n      return this\r\n    }\r\n    else {\r\n      this.x = this.x - v\r\n      this.y = this.y - v\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  multiply(v: Vector|number) {\r\n    if (v instanceof Vector) {\r\n      this.x = this.x * v.x\r\n      this.y = this.y * v.y\r\n\r\n      return this\r\n    }\r\n    else {\r\n      this.x = this.x * v\r\n      this.y = this.y * v\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  divide(v: Vector|number) {\r\n    if (v instanceof Vector) {\r\n      this.x = this.x / v.x\r\n      this.y = this.y / v.y\r\n\r\n      return this\r\n    }\r\n    else {\r\n      this.x = this.x / v\r\n      this.y = this.y / v\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  equals(v: Vector) {\r\n    return this.x == v.x && this.y == v.y;\r\n  }\r\n\r\n  dot(v: Vector) {\r\n    return this.x * v.x + this.y * v.y;\r\n  }\r\n\r\n  distance(vector: Vector) {\r\n    return Math.round(Math.sqrt((this.x - vector.x)**2+(this.y - vector.y)**2));\r\n  }\r\n\r\n  limit(max_length) {\r\n    if(this.length() > max_length) {\r\n      this.x = (max_length/this.length())*this.x;\r\n      this.y = (max_length/this.length())*this.y;\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  length() {\r\n    return Math.sqrt(this.x**2+this.y**2);\r\n  }\r\n\r\n  unit() {\r\n    let length = this.length();\r\n    this.x = this.x/length\r\n    this.y = this.y/length\r\n\r\n    return this\r\n  }\r\n\r\n  clone() {\r\n    return new Vector(this.x, this.y)\r\n  }\r\n\r\n  discretize() {\r\n    this.x = Math.round(this.x)\r\n    this.y = Math.round(this.y)\r\n\r\n    return this\r\n  }\r\n\r\n  wrap(grid_length) {\r\n    this.x = this.get_bounded_index(grid_length, this.x)\r\n    this.y = this.get_bounded_index(grid_length, this.y)\r\n\r\n    return this\r\n  }\r\n\r\n  get_bounded_index(grid_length, index) {\r\n    let bounded_index = index;\r\n\r\n    if(index < 0) {\r\n      bounded_index = index + grid_length;\r\n    }\r\n    if(index >= grid_length) {\r\n      bounded_index = index - grid_length;\r\n    }\r\n\r\n    return bounded_index\r\n  }\r\n\r\n  toString() {\r\n    return \"[\"+this.x+\",\"+this.y+\"]\"\r\n  }\r\n}\r\n","import {autoinject} from 'aurelia-framework';\n\n\n@autoinject\nexport class NoSelection {\n  message = \"This site provides visual analysis dashboards for well known models from different fields.\"\n}\n","import {Vector} from \"../helper/vector\"\r\n\r\nexport class Generic {\r\n  constructor() {\r\n    \r\n  }\r\n\r\n  get_vision_indices(radius) {\r\n    let indices = [];\r\n    let total_area = 4 * (radius**2 + radius);\r\n    let side = (2 * radius) + 1;\r\n\r\n    // Check if cell is within euclidean area\r\n    for(let x = 0; x < side; x++) {\r\n      for( let y = 0; y < side; y++) {\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n","import {Vector} from \"../helper/vector\"\r\nimport {Vision} from \"./vision\"\r\n\r\nexport class Sheep {\r\n  // Attributes\r\n  public type = \"sheep\";\r\n  public current_speed = 0;\r\n\r\n  private vision;\r\n  private vision_radius = 7;\r\n  private herding_range = 4;\r\n  private desired_separation = 2;\r\n  private mating_threshold = 20;\r\n  private maximum_age = 60;\r\n  private max_speed = 1;\r\n\r\n  private dead = false;\r\n  private age = 1;\r\n  private saturation = 2;\r\n  private willingness = 10;\r\n  private neighbors = new Map();\r\n  private surroundings = [];\r\n  private velocity;\r\n  private next_position;\r\n\r\n  private mate_weight = 1;\r\n  private flock_weight = 1;\r\n  private feed_weight = 1;\r\n\r\n  constructor(private position: Vector) {\r\n    // Initialize next position\r\n    this.next_position = position.clone()\r\n\r\n    // Initialize with random direction\r\n    this.velocity = new Vector(this.get_random_float(-1, 1), this.get_random_float(-1, 1)).unit()\r\n    // Get vision indices\r\n    this.vision = new Vision(this.vision_radius)\r\n  }\r\n\r\n  // Generate random numbers within range\r\n  get_random_int(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  get_random_float(min, max) {\r\n    return Math.random() * (max - min + 1) + min;\r\n  }\r\n\r\n  // Basic decision function\r\n  public simulate(grid, host_list) {\r\n    this.look(grid, host_list);\r\n    this.decide(grid, host_list);\r\n    this.update_host(host_list);\r\n  }\r\n\r\n  update_host(host_list) {\r\n    this.saturation--;\r\n    this.willingness++;\r\n    this.age++;\r\n\r\n    if(this.saturation <= 0) {\r\n      this.dead = true;\r\n    }\r\n\r\n    if(this.age > this.maximum_age) {\r\n      this.dead = true;\r\n    }\r\n  }\r\n\r\n  look(grid, host_list) {\r\n    this.neighbors.clear();\r\n    this.surroundings.length = 0;\r\n\r\n    // Check for other hosts\r\n    // TODO: Check only surroundings?\r\n    for(let host of host_list) {\r\n      if(host !== this) {\r\n        let distance = this.position.distance(host.position);\r\n\r\n        if(distance <= this.vision_radius ) {\r\n          this.neighbors.set(host, distance);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Observe the landscape\r\n    for(let cell of this.vision.get_vision_indices(this.position)) {\r\n      this.surroundings.push({\r\n        d: this.position.distance(new Vector(cell[0], cell[1])),\r\n        type: grid[this.get_bounded_index(grid.length, cell[0])][this.get_bounded_index(grid.length, cell[1])],\r\n        position: new Vector(cell[0], cell[1])\r\n      });\r\n    }\r\n  }\r\n\r\n  decide(grid, host_list) {\r\n    let sheeps_around = [];\r\n    let predators_around = [];\r\n\r\n    this.mate_weight = 1;\r\n    this.flock_weight = 1;\r\n    this.feed_weight = 1;\r\n\r\n    let flock_movement: Vector;\r\n    let feed_movement: Vector;\r\n    let mate_movement: Vector;\r\n    let total_movement: Vector;\r\n\r\n    // Analyse surroundings\r\n    this.neighbors.forEach((value, key) => {\r\n      if(key.type == \"sheep\" && value <= this.herding_range) {\r\n        sheeps_around.push(key);\r\n      }\r\n      if(key.type == \"wolf\" && value <= this.herding_range) {\r\n        predators_around.push(key)\r\n      }\r\n    })\r\n\r\n    // decide based on importance\r\n    if(this.hungry()) {\r\n      if(this.eat(grid)) {\r\n        this.feed_weight = this.feed_weight*0.5;\r\n      }\r\n      else {\r\n        this.feed_weight = this.feed_weight*2;\r\n      }\r\n    }\r\n\r\n    if(this.willingness >= this.mating_threshold) {\r\n      if(this.mate(sheeps_around, host_list)) {\r\n        this.mate_weight = this.mate_weight*0.5;\r\n      }\r\n      else {\r\n        this.mate_weight = this.mate_weight*2;\r\n      }\r\n    }\r\n\r\n    if(predators_around.length > 0) {\r\n      this.mate_weight = this.mate_weight*0.1;\r\n      this.flock_weight = this.flock_weight*2;\r\n    }\r\n\r\n    flock_movement = this.flock(sheeps_around)\r\n    feed_movement = this.feed(this.surroundings)\r\n    mate_movement = this.find_partner(sheeps_around)\r\n\r\n    flock_movement.multiply(this.flock_weight);\r\n    feed_movement.multiply(this.feed_weight);\r\n    mate_movement.multiply(this.mate_weight)\r\n\r\n    total_movement = flock_movement.add(feed_movement).add(mate_movement)\r\n\r\n    this.movement(grid, total_movement.divide(3));\r\n  }\r\n\r\n  eat(grid) {\r\n    let type = grid[this.position.x][this.position.y];\r\n\r\n    if(type == \"grass_fresh\") {\r\n      this.saturation += 5;\r\n      grid[this.position.x][this.position.y] = \"grass\"\r\n\r\n      return true\r\n    }\r\n    else if(type == \"grass\") {\r\n      this.saturation += 2;\r\n\r\n      return true\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  find_partner(neighbors) {\r\n    let distance = this.vision_radius;\r\n    let available_partners = neighbors.filter(cell => cell.saturation > 5);\r\n    let partner;\r\n\r\n    available_partners.forEach(n => {\r\n      if(this.position.distance(n.position) < distance) {\r\n        distance = this.position.distance(n.position);\r\n        partner = n;\r\n      }\r\n    })\r\n\r\n    if(partner instanceof Sheep) {\r\n      return this.move_to(partner.position)\r\n    }\r\n    else {\r\n      return this.move_to(this.position)\r\n    }\r\n  }\r\n\r\n  mate(neighbors, host_list) {\r\n    for(let i = 0; i < neighbors.length; i++) {\r\n      let n = neighbors[i]\r\n      if(this.position.distance(n.position) < 2 && n.willingness >= this.mating_threshold) {\r\n        // Create new sheep\r\n        host_list.push(new Sheep(new Vector(this.position.x, this.position.y)))\r\n\r\n        // Reset willingsness\r\n        this.willingness = 0;\r\n        n.willingness = 0;\r\n\r\n        //Break out of loop\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  // Looking for fresh grass\r\n  feed(surroundings) {\r\n    let mean = new Vector(0, 0);\r\n    let nearest_fresh_grass = surroundings.filter(cell => cell.type == \"grass_fresh\")\r\n    let nearest_distance = Math.min(this.vision_radius, Math.min.apply(Math, nearest_fresh_grass.map(function(o){return o.d;})))\r\n    let counter = 0;\r\n\r\n    nearest_fresh_grass.forEach(n => {\r\n      mean.add(n.position)\r\n      counter++;\r\n    })\r\n\r\n    // surroundings.forEach(n => {\r\n    //   if(n.type == \"grass_fresh\") {\r\n    //     mean.add(n.position)\r\n    //     counter++;\r\n    //   }\r\n    //   if(n.type == \"grass\") {\r\n    //     mean.add(n.position)\r\n    //     counter++;\r\n    //   }\r\n    // })\r\n\r\n    return this.move_to(mean.divide(counter)).multiply(nearest_distance+1)\r\n  }\r\n\r\n  hungry() {\r\n    let rnd = Math.random()\r\n    if(this.saturation > 8) return false;\r\n    if(this.saturation <= 8 && this.saturation > 4 && rnd < 0.2) return true;\r\n    if(this.saturation <= 4 && this.saturation > 1 && rnd < 0.8) return true;\r\n    if(this.saturation <= 1) return true;\r\n  }\r\n\r\n  movement(grid, total_movement) {\r\n    this.velocity.add(total_movement).limit(this.max_speed)\r\n\r\n    this.next_position.add(this.velocity)\r\n\r\n    this.current_speed = (this.position.distance(this.next_position) - this.max_speed) * -1\r\n\r\n    // Prepare for discrete grid\r\n    this.next_position.discretize().wrap(grid.length)\r\n  }\r\n\r\n  flock(neighbors) {\r\n    let separation: Vector = this.separate(neighbors).multiply(4)\r\n    let alignment: Vector = this.align(neighbors).multiply(2)\r\n    let cohesion: Vector = this.cohere(neighbors)\r\n\r\n    return separation.add(alignment).add(cohesion)\r\n  }\r\n\r\n  cohere(neighbors) {\r\n    let sum = new Vector(0, 0);\r\n\r\n    neighbors.forEach(n => {\r\n      sum.add(n.position)\r\n    })\r\n\r\n    return this.move_to(sum.divide(neighbors.length))\r\n  }\r\n\r\n  align(neighbors) {\r\n    let mean = new Vector(0, 0)\r\n\r\n\r\n    neighbors.forEach(n => {\r\n      mean.add(n.velocity)\r\n    })\r\n\r\n    if(mean.length() > 0) {\r\n      mean.divide(neighbors.length)\r\n      mean.limit(5)\r\n    }\r\n\r\n    return mean\r\n  }\r\n\r\n  separate(neighbors) {\r\n    let mean = new Vector(0, 0)\r\n    let counter = 0;\r\n\r\n    neighbors.forEach(n => {\r\n      let distance = n.position.distance(this.position)\r\n\r\n      if(distance > 0  && distance < this.desired_separation) {\r\n        mean.add(this.position.clone().subtract(n.position).unit())\r\n        counter++;\r\n      }\r\n      if(distance == 0) {\r\n        // mean.add(this.position.clone().add(n.position).unit())\r\n        mean.add(n.velocity.multiply(-1).unit())\r\n        counter++;\r\n      }\r\n    })\r\n\r\n    if(mean.length() > 0) {\r\n      mean.divide(counter)\r\n    }\r\n\r\n    return mean\r\n  }\r\n\r\n  move_to(target : Vector) {\r\n    let target_position = target.clone().subtract(this.position);\r\n    let distance = target_position.length();\r\n\r\n    if(distance > 0) {\r\n      return target_position.unit().subtract(this.velocity)\r\n    }\r\n    else {\r\n      return this.velocity.clone()\r\n    }\r\n  }\r\n\r\n  get_bounded_index(grid_length, index) {\r\n    let bounded_index = index;\r\n\r\n    if(index < 0) {\r\n      bounded_index = index + grid_length;\r\n    }\r\n    if(index >= grid_length) {\r\n      bounded_index = index - grid_length;\r\n    }\r\n\r\n    return bounded_index\r\n  }\r\n}\r\n","import {Vector} from \"../helper/vector\"\r\n\r\nexport class Vision {\r\n  indices = [];\r\n\r\n  constructor(private vision) {\r\n    this.precompute_vision_indices(vision);\r\n  }\r\n\r\n  precompute_vision_indices(radius) {\r\n    let indices = [];\r\n\r\n    // Check if cell is within euclidean area\r\n    for(let x = -radius; x <= radius; x++) {\r\n      for( let y = -radius; y <= radius; y++) {\r\n        if(Math.round(Math.sqrt((0 - x)**2+(0 - y)**2)) <= radius) {\r\n          indices.push([x, y])\r\n        }\r\n      }\r\n    }\r\n\r\n    this.indices = indices;\r\n  }\r\n\r\n  get_vision_indices(position) {\r\n    let out = [];\r\n\r\n    for(let cell of this.indices) {\r\n      out.push([position.x + cell[0], position.y + cell[1]])\r\n    }\r\n\r\n    return out\r\n  }\r\n}\r\n","import * as d3 from \"d3\";\nimport { inject, noView, bindable, bindingMode, BindingEngine } from 'aurelia-framework';\n\n@inject(Element, BindingEngine)\n@noView()\nexport class dualBarChart {\n  // One-Way\n  @bindable margin = { top: 20, right: 60, bottom: 35, left: 60, middle: 20 };\n  @bindable x_attribute = \"x\";\n  @bindable y_attribute = \"y\";\n  @bindable redraw = 0;\n\n  // Two-Way\n  @bindable({ defaultBindingMode: bindingMode.twoWay }) brushing;\n\n  // Observed Variables\n  @bindable data = [];\n\n  // Aurelia variables\n  private element;\n  private subscription;\n  private resize_sub;\n\n  // D3 variables\n  private svg;\n  private barchart;\n  private x;\n  private x_inner;\n  private y;\n  private z;\n  private z_inner;\n  private legend;\n\n  // set the dimensions and margins of the graph\n  private width;\n  private height;\n  private x_size = 900;\n  private y_size = 500;\n\n  constructor(element, private bindingEngine) {\n    this.element = element;\n  }\n\n  // This is called after binding attributes\n  attached() {\n    if (this.data) {\n      // subscribe to the data array and watch for changes\n      this.subscription = this.bindingEngine\n        .collectionObserver(this.data)\n        .subscribe(splices => this.dataMutated(splices));\n    }\n\n    this.resize_sub = this.bindingEngine\n      .propertyObserver(this.element.parentElement, \"offsetWidth\")\n      .subscribe(n => this.resize())\n\n    // set the dimensions and margins of the graph\n    this.x_size = this.element.parentElement.offsetWidth;\n    this.y_size = this.element.parentElement.offsetHeight;\n\n    this.width = this.x_size - this.margin.left - this.margin.right;\n    this.height = this.y_size - this.margin.top - this.margin.bottom;\n\n    this.initChart()\n    this.updateChart();\n  }\n\n  resize() {\n    this.x_size = this.element.parentElement.offsetWidth;\n    this.y_size = this.element.parentElement.offsetHeight;\n\n    this.width = this.x_size - this.margin.left - this.margin.right;\n    this.height = this.y_size - this.margin.top - this.margin.bottom;\n\n    this.resizeChart();\n    this.updateChart();\n  }\n\n  // Update the chart if the data changes\n  dataMutated(splices) {\n    if (this.data.length > 0) {\n      this.updateChart();\n    }\n    else {\n      this.svg.selectAll(\".medikament\").remove()\n    }\n  }\n\n  unbind() {\n    this.subscription.dispose();\n    this.resize_sub.dispose();\n  }\n\n  initChart() {\n    // Complete drawing area\n    this.svg = d3.select(this.element)\n      .append(\"svg\")\n      .attr(\"width\", this.width + this.margin.left + this.margin.right)\n      .attr(\"height\", this.height + this.margin.top + this.margin.bottom);\n\n    // Linechart area\n    this.barchart = this.svg\n      .append(\"g\")\n      .attr(\"width\", this.width)\n      .attr(\"height\", this.height)\n      .attr(\"transform\",\n      \"translate(\" + this.margin.left + \", \" + this.margin.top + \")\");\n\n    // set the ranges\n    this.x = d3.scaleBand()\n      .padding(0.1)\n      .range([0, this.width]);\n    this.x_inner = d3.scaleBand()\n      .padding(0.05)\n    this.y = d3.scaleLinear()\n      .range([this.height, 0]);\n    this.z = d3.scaleOrdinal()\n      .range([\"#98C1D9\" ,\"#EE6C4D\"])\n      .domain([\"Standart\", \"Max\"]);\n\n    // add the x Axis\n    this.barchart.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n      .attr(\"class\", \"xAxis\");\n\n    // add the y Axis\n    this.barchart.append(\"g\")\n      .attr(\"class\", \"yAxis\")\n\n    // y axis label\n    this.barchart.append(\"text\")\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", -4)\n      .text(\"Kosten\");\n\n    // add legend\n    this.legend = this.barchart.append(\"g\")\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", 10)\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"class\", \"legend\");\n  }\n\n  resizeChart() {\n    // Complete drawing area\n    this.svg\n      .attr(\"width\", this.width + this.margin.left + this.margin.right)\n      .attr(\"height\", this.height + this.margin.top + this.margin.bottom);\n\n    // Linechart area\n    this.barchart\n      .attr(\"width\", this.width)\n      .attr(\"height\", this.height)\n      .attr(\"transform\",\n      \"translate(\" + this.margin.left + \", \" + this.margin.top + \")\");\n\n    // set the ranges\n    this.x\n      .range([0, this.width]);\n    this.y\n      .range([this.height, 0]);\n\n    // add the x Axis\n    this.barchart.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n  }\n\n  updateChart() {\n    let self = this\n\n    let types = []\n    let keys = []\n    let costs = [\"Standart\", \"Max\"]\n    if (this.data.length > 0) types = Object.getOwnPropertyNames(this.data[0]).slice(1);\n    if (this.data.length > 0) keys = Object.getOwnPropertyNames(this.data[0][\"Standart\"]);\n\n    let totals = this.data.map(x => {\n      let s = { key: x.x, value: 0 };\n      keys.forEach(y => {\n        s.value = s.value + +x[y];\n      })\n      return s;\n    })\n    \n    this.x.domain(this.data.map(function(d) { return d.x; }));\n    this.x_inner.domain(costs).rangeRound([0, this.x.bandwidth()]);\n    this.y.domain([0, d3.max(this.data, function(d) { return d3.max(costs, function(key) { return Object.values({ Basis: d[\"Basis\"], ...d[key]}).reduce((a, b) => a + b); }); })]).nice();\n\n    let t = d3.transition(\"default\")\n      .duration(500);\n\n      this.barchart.selectAll(\".medikament\").remove()\n\n      let chart = this.barchart.append(\"g\")\n          .attr(\"class\", \"medikament\")\n        .selectAll(\"g\")\n        .data(this.data)\n        .enter().append(\"g\")\n          .attr(\"transform\", function(d) { return \"translate(\" + self.x(d.x) + \",0)\"; })\n        .selectAll(\"rect\")\n        .data(function(d) { return costs.map(function(key) { return {key: key, value: Object.values({ Basis: d[\"Basis\"], ...d[key]}).reduce((a, b) => a + b)}}); })\n\n      chart.enter().append(\"rect\")\n        .attr(\"x\", function(d) { return self.x_inner(d.key); })\n        .attr(\"y\", function(d) { return self.y(d.value); })\n        .attr(\"width\", self.x_inner.bandwidth())\n        .attr(\"fill\", function(d) { return self.z(d.key); })\n        .attr(\"y\", this.height)\n        .attr(\"height\", 0)\n          .merge(chart).transition(t)\n        .attr(\"height\", function(d) { return self.height - self.y(d.value); })\n        .attr(\"y\", function(d) { return self.y(d.value); });\n\n      chart.enter().append(\"text\")\n        // .attr(\"class\", \"labels\")\n        .style(\"text-anchor\", \"middle\")\n        .attr(\"x\", function(d) { return self.x_inner(d.key) + self.x_inner.bandwidth()/2; })\n        .attr(\"y\", function(d) { return self.y(d.value) - 3; })\n        .text(function(d) { return d.value; })\n\n\n      chart.exit().remove();\n\n    this.barchart.selectAll(\".xAxis\")\n      .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n      .call(d3.axisBottom(this.x));\n\n    this.barchart.selectAll(\".yAxis\")\n      .call(d3.axisLeft(this.y));\n\n    // Join\n    let legend_group = this.legend\n      .selectAll(\"g\")\n      .data(costs.reverse(), x => x)\n\n    // Enter\n    let legends = legend_group.enter().append(\"g\")\n\n    legends.append(\"rect\")\n      .attr(\"x\", this.width - 19)\n      .attr(\"width\", 19)\n      .attr(\"height\", 19)\n      .attr(\"fill\", this.z);\n\n    legends.append(\"text\")\n      .attr(\"x\", this.width - 24)\n      .attr(\"y\", 9.5)\n      .attr(\"dy\", \"0.32em\")\n      .text(function(d) { return d; });\n\n    // Update\n    legend_group.merge(legends).attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n    // Exit\n    legend_group.exit().remove();\n  }\n}\n","import * as d3 from \"d3\";\nimport { inject, noView, bindable, bindingMode, BindingEngine } from 'aurelia-framework';\n\n@inject(Element, BindingEngine)\n@noView()\nexport class dualStackedBarChart {\n  // One-Way\n  @bindable margin = { top: 20, right: 60, bottom: 35, left: 60, middle: 20 };\n  @bindable x_attribute = \"x\";\n  @bindable y_attribute = \"y\";\n  @bindable redraw = 0;\n\n  // Two-Way\n  @bindable({ defaultBindingMode: bindingMode.twoWay }) brushing;\n\n  // Observed Variables\n  @bindable data = [];\n\n  // Aurelia variables\n  private element;\n  private subscription;\n  private resize_sub;\n\n  // D3 variables\n  private svg;\n  private barchart;\n  private x;\n  private x_inner;\n  private y;\n  private z;\n  private z_inner;\n  private legend;\n\n  // set the dimensions and margins of the graph\n  private width;\n  private height;\n  private x_size = 900;\n  private y_size = 500;\n\n  constructor(element, private bindingEngine) {\n    this.element = element;\n  }\n\n  // This is called after binding attributes\n  attached() {\n    if (this.data) {\n      // subscribe to the data array and watch for changes\n      this.subscription = this.bindingEngine\n        .collectionObserver(this.data)\n        .subscribe(splices => this.dataMutated(splices));\n    }\n\n    this.resize_sub = this.bindingEngine\n      .propertyObserver(this.element.parentElement, \"offsetWidth\")\n      .subscribe(n => this.resize())\n\n    // set the dimensions and margins of the graph\n    this.x_size = this.element.parentElement.offsetWidth;\n    this.y_size = this.element.parentElement.offsetHeight;\n\n    this.width = this.x_size - this.margin.left - this.margin.right;\n    this.height = this.y_size - this.margin.top - this.margin.bottom;\n\n    this.initChart()\n    this.updateChart();\n  }\n\n  resize() {\n    this.x_size = this.element.parentElement.offsetWidth;\n    this.y_size = this.element.parentElement.offsetHeight;\n\n    this.width = this.x_size - this.margin.left - this.margin.right;\n    this.height = this.y_size - this.margin.top - this.margin.bottom;\n\n    this.resizeChart();\n    this.updateChart();\n  }\n\n  // Update the chart if the data changes\n  dataMutated(splices) {\n    if (this.data.length > 0) {\n      this.updateChart();\n    }\n    else {\n      this.svg.selectAll(\".medikament\").remove()\n    }\n  }\n\n  unbind() {\n    this.subscription.dispose();\n    this.resize_sub.dispose();\n  }\n\n  initChart() {\n    // Complete drawing area\n    this.svg = d3.select(this.element)\n      .append(\"svg\")\n      .attr(\"width\", this.width + this.margin.left + this.margin.right)\n      .attr(\"height\", this.height + this.margin.top + this.margin.bottom);\n\n    // Linechart area\n    this.barchart = this.svg\n      .append(\"g\")\n      .attr(\"width\", this.width)\n      .attr(\"height\", this.height)\n      .attr(\"transform\",\n      \"translate(\" + this.margin.left + \", \" + this.margin.top + \")\");\n\n    // set the ranges\n    this.x = d3.scaleBand()\n      .padding(0.1)\n      .range([0, this.width]);\n    this.x_inner = d3.scaleBand()\n      .padding(0.05)\n    this.y = d3.scaleLinear()\n      .range([this.height, 0]);\n    this.z = d3.scaleOrdinal()\n      .range([\"#33CA7F\" ,\"#ECE4B7\", \"#FC9F5B\"])\n      .domain([\"Basis\", \"UV\", \"IBD\"]);\n\n    // add the x Axis\n    this.barchart.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n      .attr(\"class\", \"xAxis\");\n\n    // add the y Axis\n    this.barchart.append(\"g\")\n      .attr(\"class\", \"yAxis\")\n\n    // y axis label\n    this.barchart.append(\"text\")\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", -4)\n      .text(\"Kosten\");\n\n    // add legend\n    this.legend = this.barchart.append(\"g\")\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", 10)\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"class\", \"legend\");\n  }\n\n  resizeChart() {\n    this.svg\n      .attr(\"width\", this.width + this.margin.left + this.margin.right)\n      .attr(\"height\", this.height + this.margin.top + this.margin.bottom);\n\n    // Linechart area\n    this.barchart\n      .attr(\"width\", this.width)\n      .attr(\"height\", this.height)\n      .attr(\"transform\",\n      \"translate(\" + this.margin.left + \", \" + this.margin.top + \")\");\n\n    // set the ranges\n    this.x\n      .range([0, this.width]);\n    this.y\n      .range([this.height, 0]);\n\n    // add the x Axis\n    this.barchart.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n  }\n\n  updateChart() {\n    let self = this\n\n    let types = []\n    let keys = []\n    let costs = [\"Standart\", \"Max\"]\n    if (this.data.length > 0) types = Object.getOwnPropertyNames(this.data[0]).slice(1);\n    if (this.data.length > 0) keys = [\"Basis\", ...Object.getOwnPropertyNames(this.data[0][\"Standart\"])];\n\n    let totals = this.data.map(x => {\n      let s = { key: x.x, value: 0 };\n      keys.forEach(y => {\n        s.value = s.value + +x[y];\n      })\n      return s;\n    })\n\n    this.x.domain(this.data.map(function(d) { return d.x; }));\n    this.x_inner.domain(costs).rangeRound([0, this.x.bandwidth()]);\n    this.y.domain([0, d3.max(this.data, function(d) { return Object.values({ Basis: d[\"Basis\"], ...d[\"Max\"]}).reduce((a, b) => a + b); })]).nice();\n    let t = d3.transition(\"default\")\n      .duration(500);\n\n      this.barchart.selectAll(\".medikament\").remove()\n\n      let chart = this.barchart.append(\"g\")\n          .attr(\"class\", \"medikament\")\n        .selectAll(\"g\")\n        .data(this.data)\n        .enter().append(\"g\")\n          .attr(\"transform\", function(d) { return \"translate(\" + self.x(d.x) + \",0)\"; })\n        .selectAll(\".groups\")\n        .data(function(d) { return costs.map(function(key) { return {key: key, value: { Basis: d.Basis, ...d[key]} }}); })\n\n      let groups = chart.enter().append(\"g\")\n        .attr(\"transform\", function(d) { return \"translate(\" + self.x_inner(d.key) + \",0)\"; })\n        .attr(\"class\", \"groups\")\n\n      let bars = groups.selectAll(\"rect\")\n        .data(function(d) { return d3.stack().keys(keys)([d.value]); })\n\n      bars.enter().append(\"rect\")\n        .attr(\"x\", 0)\n        .attr(\"width\", self.x_inner.bandwidth())\n        .attr(\"fill\", function(d) { return self.z(d.key); })\n        .attr(\"y\", this.height)\n        .attr(\"height\", 0)\n        .merge(groups).transition(t)\n        .attr(\"y\", function(d) { return self.y(d[0][1]); })\n        .attr(\"height\", function(d) { return self.y(d[0][0]) - self.y(d[0][1]); })\n\n      bars.enter().append(\"text\")\n        .style(\"text-anchor\", \"middle\")\n        .attr(\"x\", function(d) { return self.x_inner.bandwidth()/2; })\n        .attr(\"y\", function(d) { return self.y(Object.values(d[0].data).reduce((a, b) => a + b)) - 3; })\n        .text(function(d) { return Object.values(d[0].data).reduce((a, b) => a + b); })\n\n      chart.exit().remove();\n\n    this.barchart.selectAll(\".xAxis\")\n      .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n      .call(d3.axisBottom(this.x));\n\n    this.barchart.selectAll(\".yAxis\")\n      .call(d3.axisLeft(this.y));\n\n    // Join\n    let legend_group = this.legend\n      .selectAll(\"g\")\n      .data(keys.reverse(), x => x)\n\n    // Enter\n    let legends = legend_group.enter().append(\"g\")\n\n    legends.append(\"rect\")\n      .attr(\"x\", this.width - 19)\n      .attr(\"width\", 19)\n      .attr(\"height\", 19)\n      .attr(\"fill\", this.z);\n\n    legends.append(\"text\")\n      .attr(\"x\", this.width - 24)\n      .attr(\"y\", 9.5)\n      .attr(\"dy\", \"0.32em\")\n      .text(function(d) { return d; });\n\n    // Update\n    legend_group.merge(legends).attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n    // Exit\n    legend_group.exit().remove();\n  }\n}\n","import * as d3 from \"d3\";\nimport { inject, noView, bindable, bindingMode, BindingEngine } from 'aurelia-framework';\n\n@inject(Element, BindingEngine)\n@noView()\nexport class dynamicStackedBarChart {\n  // One-Way\n  @bindable margin = { top: 20, right: 60, bottom: 35, left: 60, middle: 20 };\n  @bindable x_attribute = \"x\";\n  @bindable y_attribute = \"y\";\n  @bindable redraw = 0;\n\n  // Two-Way\n  @bindable({ defaultBindingMode: bindingMode.twoWay }) brushing;\n\n  // Observed Variables\n  @bindable data = [];\n\n  // Aurelia variables\n  private element;\n  private subscription;\n  private resize_sub;\n\n  // D3 variables\n  private svg;\n  private barchart;\n  private x;\n  private y;\n  private z;\n  private format;\n\n  // set the dimensions and margins of the graph\n  private width;\n  private height;\n  private x_size = 900;\n  private y_size = 500;\n\n  constructor(element, private bindingEngine) {\n    this.element = element;\n  }\n\n  // This is called after binding attributes\n  attached() {\n    if (this.data) {\n      // subscribe to the data array and watch for changes\n      this.subscription = this.bindingEngine\n        .collectionObserver(this.data)\n        .subscribe(splices => this.dataMutated(splices));\n    }\n\n    this.resize_sub = this.bindingEngine\n      .propertyObserver(this.element.parentElement, \"offsetWidth\")\n      .subscribe(n => this.resize())\n\n    // set the dimensions and margins of the graph\n    this.x_size = this.element.parentElement.offsetWidth;\n    this.y_size = this.element.parentElement.offsetHeight;\n\n    this.width = this.x_size - this.margin.left - this.margin.right;\n    this.height = this.y_size - this.margin.top - this.margin.bottom;\n\n    this.initChart()\n    this.updateChart();\n  }\n\n  resize() {\n    this.x_size = this.element.parentElement.offsetWidth;\n    this.y_size = this.element.parentElement.offsetHeight;\n\n    this.width = this.x_size - this.margin.left - this.margin.right;\n    this.height = this.y_size - this.margin.top - this.margin.bottom;\n\n    this.resizeChart();\n    this.updateChart();\n  }\n\n  // Update the chart if the data changes\n  dataMutated(splices) {\n    if (this.data.length > 0) {\n      this.updateChart();\n    }\n    else {\n      this.svg.selectAll(\".medikament\").remove()\n    }\n  }\n\n  unbind() {\n    this.subscription.dispose();\n    this.resize_sub.dispose();\n  }\n\n  initChart() {\n    // Complete drawing area\n    this.svg = d3.select(this.element)\n      .append(\"svg\")\n      .attr(\"width\", this.width + this.margin.left + this.margin.right)\n      .attr(\"height\", this.height + this.margin.top + this.margin.bottom);\n\n    // Linechart area\n    this.barchart = this.svg\n      .append(\"g\")\n      .attr(\"width\", this.width)\n      .attr(\"height\", this.height)\n      .attr(\"transform\",\n      \"translate(\" + this.margin.left + \", \" + this.margin.top + \")\");\n\n    // set the ranges\n    this.x = d3.scaleBand()\n      .padding(0.1)\n      .range([0, this.width]);\n    this.y = d3.scaleLinear()\n      .range([this.height, 0]);\n    this.z = d3.scaleOrdinal()\n      .range([\"#33CA7F\" ,\"#ECE4B7\", \"#FC9F5B\"])\n\n    // add the x Axis\n    this.barchart.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n      .attr(\"class\", \"xAxis\");\n\n    // add the y Axis\n    this.barchart.append(\"g\")\n      .attr(\"class\", \"yAxis\")\n\n    // y axis label\n    this.barchart.append(\"text\")\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", -4)\n      .text(\"Kosten\");\n\n    // Text format\n    this.format = d3.format(\",.2f\")\n  }\n\n  resizeChart() {\n    this.svg\n      .attr(\"width\", this.width + this.margin.left + this.margin.right)\n      .attr(\"height\", this.height + this.margin.top + this.margin.bottom);\n\n    // Linechart area\n    this.barchart\n      .attr(\"width\", this.width)\n      .attr(\"height\", this.height)\n      .attr(\"transform\",\n      \"translate(\" + this.margin.left + \", \" + this.margin.top + \")\");\n\n    // set the ranges\n    this.x\n      .range([0, this.width]);\n    this.y\n      .range([this.height, 0]);\n\n    // add the x Axis\n    this.barchart.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n  }\n  updateChart() {\n    let self = this\n\n    let keys = []\n    let elements = []\n    let colors = new Map()\n    // if (this.data.length > 0) keys = Object.getOwnPropertyNames(this.data[0]).slice(1);\n    keys =  Array.from(new Set(self.data.map(item => item.x)));\n\n    keys.forEach(k => {\n      elements = Object.getOwnPropertyNames(this.data[0]).slice(1);\n    })\n    if (this.data.length > 0) keys = Object.getOwnPropertyNames(this.data[0]).slice(1);\n\n    let totals = this.data.map(x => {\n      let s = { key: x.x, value: 0 };\n      keys = Object.getOwnPropertyNames(x).slice(1);\n\n      keys.forEach(y => {\n        s.value = s.value + +x[y];\n      })\n\n      return s;\n    })\n\n    this.x.domain(this.data.map(function(d) { return d.x; }));\n    this.y.domain([0, d3.max(totals, x => x.value)]).nice();\n    this.z.domain(keys);\n\n    let t = d3.transition(\"default\")\n      .duration(500);\n\n    let stacks = []\n    this.data.forEach(d => {\n      keys = Object.getOwnPropertyNames(d).slice(1);\n      stacks.push({key: d.x, stack: d3.stack().keys(keys)([d])});\n\n      let c = d3.scaleOrdinal()\n        .range([\"#33CA7F\" ,\"#ECE4B7\", \"#FC9F5B\"])\n        .domain(keys)\n\n      colors.set(d.x, c)\n    })\n\n    let stack = d3.stack().keys(keys)(self.data)\n\n    // Delete all bars before rerendering them\n    this.barchart.selectAll(\".medikament\").remove()\n\n    // Join\n    let chart = this.barchart.selectAll(\".medikament\")\n      .data(stacks, x => x.key)\n\n    // Enter\n    let bars = chart.enter().append(\"g\")\n      .attr(\"class\", \"medikament\")\n\n    bars.selectAll(\"rect\")\n             .data(function(d) { return d.stack; })\n             .enter().append(\"rect\")\n               .attr(\"x\", function(d) { return self.x(d[0].data.x); })\n               .attr(\"width\", self.x.bandwidth())\n               .attr(\"y\", this.height)\n               .attr(\"height\", 0)\n\n    // Update\n    bars.selectAll(\"rect\")\n      .transition(t)\n      .attr(\"y\", function(d) { return self.y(d[0][1]); })\n      .attr(\"height\", function(d) { return self.y(d[0][0]) - self.y(d[0][1]); })\n      .attr(\"fill\", function(d) { return colors.get(d[0].data.x)(d.key); })\n\n    bars.selectAll(\"text\")\n             .data(function(d) { return d.stack; })\n             .enter().append(\"text\")\n               .style(\"text-anchor\", \"middle\")\n               .style(\"fill\", \"black\")\n               .attr(\"x\", function(d) { return self.x(d[0].data.x) +self.x.bandwidth()/2; })\n               .attr(\"y\", function(d) { return self.y(d[0][1]+(d[0][0] - d[0][1])/2) + 5; })\n               .text(function(d) { return d.key + \" (\"+ self.format(100/d3.sum(Object.values(d[0].data).slice(1))*d[0].data[d.key]) +\"%)\"})\n\n    // Exit\n    chart.exit().remove();\n\n    // Add texts\n    let labels = this.barchart.selectAll(\".labels\")\n      .data(totals, x => x.key)\n\n    labels.enter().append(\"text\")\n      .attr(\"class\", \"labels\")\n      .style(\"text-anchor\", \"middle\")\n        .merge(labels)\n      .attr(\"x\", function(d) { return self.x(d.key) + self.x.bandwidth()/2; })\n      .attr(\"y\", function(d) { return self.y(d.value) - 3; })\n      .text(function(d) { return d.value; })\n\n    labels.exit().remove();\n\n    this.barchart.selectAll(\".xAxis\")\n      .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n      .call(d3.axisBottom(this.x));\n\n    this.barchart.selectAll(\".yAxis\")\n      .call(d3.axisLeft(this.y));\n\n\n  }\n}\n","import * as d3 from \"d3\";\nimport {inject, noView, bindable, bindingMode, BindingEngine} from 'aurelia-framework';\n\n@inject(Element, BindingEngine)\n@noView()\nexport class LineChartFocus {\n  // One-Way\n  @bindable margin = { top: 20, right: 60, bottom: 35, left: 60, middle: 20 };\n  @bindable x_attribute = \"x\";\n  @bindable y_attribute = \"y\";\n  @bindable redraw = 0;\n\n  // Two-Way\n  @bindable({ defaultBindingMode: bindingMode.twoWay }) brushing;\n\n  // Observed Variables\n  @bindable data = [];\n\n  // Aurelia variables\n  private element;\n  private subscription;\n\n  // D3 variables\n  private svg;\n  private linechart;\n  private focus;\n  private x;\n  private y;\n  private focus_x;\n  private valueline;\n  private histogram;\n  private brush;\n\n  // set the dimensions and margins of the graph\n  private width;\n  private height;\n  private x_size = 900;\n  private y_size = 500;\n  private lc_width = 50;\n  private lc_height = 500;\n  private focus_width = 50;\n  private focus_height = 500;\n  private focus_offset = 100;\n\n  constructor(element, private bindingEngine) {\n    this.element = element;\n  }\n\n  // This is called after binding attributes\n  attached() {\n      if (this.data) {\n        // subscribe to the data array and watch for changes\n        this.subscription = this.bindingEngine\n          .collectionObserver(this.data)\n          .subscribe(splices => this.dataMutated(splices));\n        }\n\n      // set the dimensions and margins of the graph\n      this.x_size = this.element.parentElement.offsetWidth;\n      this.y_size = this.element.parentElement.offsetHeight;\n\n      this.width = this.x_size - this.margin.left - this.margin.right;\n      this.lc_width = this.width * 0.8;\n      this.focus_width = this.width * 0.2 - this.margin.left;\n\n      this.height = this.y_size - this.margin.top - this.margin.bottom;\n      this.lc_height = this.y_size - this.margin.top - this.margin.bottom;\n      this.focus_height = this.y_size - this.margin.top - this.margin.bottom;\n\n      this.focus_offset = this.lc_width + this.margin.middle + this.margin.left;\n\n      this.initChart()\n      this.updateChart();\n  }\n\n  // Update the chart if the data changes\n  dataMutated(splices) {\n      if(this.data.length > 1) {\n          this.updateChart();\n      }\n      else {\n          this.svg.selectAll(\".line\").remove()\n          this.focus.selectAll(\".bar\").remove()\n      }\n  }\n\n  redrawChanged() {\n      if(this.data.length > 1) {\n          this.updateHighlight();\n      }\n  }\n\n  unbind() {\n      this.subscription.dispose();\n  }\n\n  initChart() {\n    // Complete drawing area\n    this.svg = d3.select(this.element)\n      .append(\"svg\")\n      .attr(\"width\", this.width + this.margin.left + this.margin.right)\n      .attr(\"height\", this.height + this.margin.top + this.margin.bottom);\n\n    // Linechart area\n    this.linechart = this.svg\n        .append(\"g\")\n        .attr(\"width\", this.lc_width)\n        .attr(\"height\", this.lc_height)\n        .attr(\"transform\",\n        \"translate(\" + this.margin.left + \", \"+ this.margin.top +\")\");\n\n    this.focus = this.svg\n        .append(\"g\")\n        .attr(\"transform\",\n        \"translate(\" + this.focus_offset + \", \"+ this.margin.top +\")\");\n\n    // set the ranges\n    this.x = d3.scaleLinear()\n      .range([0, this.lc_width]);\n    this.y = d3.scaleLinear()\n      .range([this.height, 0]);\n\n    this.focus_x = d3.scaleLinear()\n        .range([0, this.focus_width]);\n\n    // add the x Axis\n    this.linechart.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n      .attr(\"class\", \"xAxis\");\n\n      // x axis label\n      this.linechart.append(\"text\")\n          .style(\"text-anchor\", \"middle\")\n          .attr(\"y\", this.height+26)\n          .attr(\"x\", this.width/2)\n          .text(\"days\");\n\n      // add the x Axis\n      this.focus.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n        .attr(\"class\", \"xAxis\");\n\n        // x axis label\n        this.focus.append(\"text\")\n            .style(\"text-anchor\", \"middle\")\n            .attr(\"y\", this.height+26)\n            .attr(\"x\", this.width/2)\n            .text(\"day\");\n\n    // add the y Axis\n    this.linechart.append(\"g\")\n      .attr(\"class\", \"yAxis\")\n\n      // y axis label\n    this.linechart.append(\"text\")\n        .style(\"text-anchor\", \"middle\")\n        .attr(\"y\", -4)\n        .text((d) => { return this.y_attribute});\n\n    // add the y Axis\n    this.focus.append(\"g\")\n      .attr(\"transform\", \"translate(\"+ this.focus_width +\", 0)\")\n      .attr(\"class\", \"yAxis\")\n\n      // y axis label\n    this.focus.append(\"text\")\n        .style(\"text-anchor\", \"middle\")\n        .attr(\"y\", -4)\n        .attr(\"x\", this.focus_width)\n        .text((d) => { return this.y_attribute});\n\n    // define the line\n    this.valueline = d3.line()\n        .x((d) => this.x(d[this.x_attribute]))\n        .y((d) => this.y(d[this.y_attribute]));\n\n    let y_attribute = this.y_attribute\n\n    this.focus.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .call(\n          d3.brushY()\n          .extent([[0, 0], [this.focus_width, this.focus_height]])\n          .on(\"brush\", (e) => {\n              if (!d3.event.sourceEvent) return; // Only transition after input.\n              if (!d3.event.selection) {\n                  this.brushing = <any>[]\n                  return;\n              }; // Ignore empty selections.\n\n              let extent = d3.event.selection.map(this.y.invert);\n              let out = <any>[]\n\n              this.linechart.selectAll(\".line\")\n                .filter(function(d) {\n                    if(d[\"data\"][d[\"data\"].length-1][y_attribute] >= extent[1] && d[\"data\"][d[\"data\"].length-1][y_attribute] <= extent[0]) {\n                        out.push(d[\"id\"])\n                    }\n                })\n\n              this.brushing = out\n      })\n      .on(\"end\", (e) => {\n          if (!d3.event.sourceEvent) return; // Only transition after input.\n          if (!d3.event.selection) {\n              this.brushing = <any>[]\n              return;\n          }; // Ignore empty selections.\n\n          let extent = d3.event.selection.map(this.y.invert);\n          let out = <any>[]\n\n          this.linechart.selectAll(\".line\")\n            .filter(function(d) {\n                if(d[\"data\"][d[\"data\"].length-1][y_attribute] >= extent[1] && d[\"data\"][d[\"data\"].length-1][y_attribute] <= extent[0]) {\n                    out.push(d[\"id\"])\n                }\n            })\n\n          this.brushing = out\n      })\n    );\n  }\n\n  updateHighlight() {\n\n      this.linechart.selectAll(\"path.line\")\n          .classed(\"highlight\", function(this, d) {\n              if(d[\"highlight\"] == 1) { return true; }\n              else { return false; }\n          })\n          .classed(\"background\", function(this, d) {\n              if(d[\"highlight\"] == 2) { return true; }\n              else { return false; }\n          });\n\n        this.linechart.selectAll(\"path.line.highlight\").moveToFront();\n  }\n\n  updateChart() {\n    // Update domains\n    let x_max = d3.max(this.data, (array) => d3.max<any, any>(array[\"data\"], (d) => d[this.x_attribute]))\n    let y_max = d3.max(this.data, (array) => d3.max<any, any>(array[\"data\"], (d) => d[this.y_attribute]))\n    let x_min = d3.min(this.data, (array) => d3.min<any, any>(array[\"data\"], (d) => d[this.x_attribute]))\n    let y_min = d3.min(this.data, (array) => d3.min<any, any>(array[\"data\"], (d) => d[this.y_attribute]))\n\n    let focus_data = <any> [];\n\n     this.data.forEach((d: any[]) => {\n         focus_data.push(d[\"data\"][d[\"data\"].length-1])\n     })\n\n    this.x.domain([x_min, x_max]);\n    this.y.domain([y_min, y_max]);\n\n    // let bins = this.histogram(focus_data)\n    let bins = d3.histogram()\n        .value((d) => d[this.y_attribute])\n        .domain(this.y.domain())\n        .thresholds(d3.range(y_min, y_max, (y_max - y_min) / 20))\n        (focus_data);\n\n    this.focus_x.domain([0, d3.max(bins, (d: any[]) => d.length)]);\n\n    // Select chart\n    this.linechart.selectAll(\"path.line\").remove();\n    let chart = this.linechart.selectAll(\"path.line\")\n        .data(this.data)\n\n    this.focus.selectAll(\".bar\").remove();\n    let focus_chart = this.focus.selectAll(\"rect.bars\")\n        .data(bins)\n\n    // Update axis\n    this.linechart.selectAll(\".xAxis\")\n      .call(d3.axisBottom(this.x));\n    this.linechart.selectAll(\".yAxis\")\n      .call(d3.axisLeft(this.y));\n\n    this.focus.selectAll(\".yAxis\")\n        .call(d3.axisRight(this.y));\n    this.focus.selectAll(\".xAxis\")\n        .call(d3.axisBottom(this.focus_x).ticks(2));\n\n    // Linechart\n    // Remove bars\n    chart.exit().remove();\n\n    // Add and update bars\n    chart.enter()\n      .append(\"path\")\n      .attr(\"class\", \"line\")\n      .classed(\"highlight\", function(this, d) {\n          if(d[\"highlight\"] == 1) { return true; }\n          else { return false; }\n      })\n      .classed(\"background\", function(this, d) {\n          if(d[\"highlight\"] == 2) { return true; }\n          else { return false; }\n      })\n      .attr(\"d\", (d) => this.valueline(d[\"data\"]));\n\n    // Barchart\n    // Remove bars\n    focus_chart.exit().remove();\n\n    // Add bars\n    focus_chart.enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n    //   .attr(\"x\", 1)\n      .attr(\"transform\", (d) => {\n\t\t  return \"translate(0,\" + this.y(d.x1) + \")\"; })\n      .attr(\"width\", (d) => { return  this.focus_x(d.length); })\n      .attr(\"height\", (d) => {\n          return this.y(d.x0) - this.y(d.x1) - 1;\n      })\n      .moveToBack();\n  }\n}\n","import * as d3 from \"d3\";\nimport {inject, noView, bindable, bindingMode, BindingEngine} from 'aurelia-framework';\n\n@inject(Element, BindingEngine)\n@noView()\nexport class LineChartGauss {\n  // One-Way\n  @bindable margin = { top: 20, right: 60, bottom: 35, left: 60, middle: 20 };\n  @bindable x_attribute = \"x\";\n  @bindable y_attribute = \"y\";\n  @bindable x_label = \"days\";\n  @bindable y_label = \"y\";\n  @bindable redraw = 0;\n\n  // Two-Way\n  @bindable({ defaultBindingMode: bindingMode.twoWay }) brushing;\n\n  // Observed Variables\n  @bindable data = [];\n\n  // Aurelia variables\n  private element;\n  private subscription;\n\n  // D3 variables\n  private mouse_event;\n  private svg;\n  private linechart;\n  private focus;\n  private x;\n  private y;\n  private focus_x;\n  private gauss_x;\n  private gauss_y;\n  private gauss_sigma;\n  private gauss_max_sigma;\n  private gradientColor;\n  private valueline;\n  private focusline;\n  private histogram;\n  private brush;\n  private center = 1.0;\n  private weight = 1.0;\n\n  // set the dimensions and margins of the graph\n  private width;\n  private height;\n  private x_size = 900;\n  private y_size = 500;\n  private lc_width = 50;\n  private lc_height = 500;\n  private focus_width = 50;\n  private focus_height = 500;\n  private focus_offset = 100;\n\n  constructor(element, private bindingEngine) {\n    this.element = element;\n  }\n\n  // This is called after binding attributes\n  attached() {\n      if (this.data) {\n        // subscribe to the data array and watch for changes\n        this.subscription = this.bindingEngine\n          .collectionObserver(this.data)\n          .subscribe(splices => this.dataMutated(splices));\n        }\n\n      // set the dimensions and margins of the graph\n      this.x_size = this.element.parentElement.offsetWidth;\n      this.y_size = this.element.parentElement.offsetHeight;\n\n      this.width = this.x_size - this.margin.left - this.margin.right;\n      this.lc_width = this.width * 0.8;\n      this.focus_width = this.width * 0.2 - this.margin.left;\n\n      this.height = this.y_size - this.margin.top - this.margin.bottom;\n      this.lc_height = this.y_size - this.margin.top - this.margin.bottom;\n      this.focus_height = this.y_size - this.margin.top - this.margin.bottom;\n\n      this.focus_offset = this.lc_width + this.margin.middle + this.margin.left;\n\n      this.initChart()\n  }\n\n  // Update the chart if the data changes\n  dataMutated(splices) {\n      if(this.data.length > 1) {\n          this.updateChart();\n          this.focus.selectAll(\"path.focusline\").remove()\n      }\n      else {\n          this.svg.selectAll(\".line\").remove()\n          this.focus.selectAll(\".bar\").remove()\n          this.focus.selectAll(\"path.focusline\").remove()\n      }\n  }\n\n  redrawChanged() {\n      if(this.data.length > 1) {\n          this.updateHighlight();\n      }\n  }\n\n  unbind() {\n      this.subscription.dispose();\n  }\n\n  getGaussian() {\n    let data = [];\n    // let rnd = d3.randomNormal();\n    let rnd = d3.randomUniform(-3, 3);\n\n  // loop to populate data array with\n  // probabily - quantile pairs\n  for (var i = 0; i < 5000; i++) {\n      let q = rnd() // calc random draw from uniform dist\n      let p = this.gaussian(q, this.gauss_y.invert(this.center), this.gauss_sigma(this.weight)) // calc prob of rand draw\n      let el = {\n          \"y\": q,\n          \"x\": p\n      }\n      data.push(el)\n  };\n\n  this.gradientColor.domain([0, d3.max(data, x => x[\"x\"])])\n\n  // need to sort for plotting\n  //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n     data.sort(function(a,b) {return (a.y > b.y) ? 1 : ((b.y > a.y) ? -1 : 0);} );\n     return data;\n\n  };\n\n  //taken from Jason Davies science library\n  // https://github.com/jasondavies/science.js/\n  gaussian(x, mean,  sigma) {\n  \tlet gaussianConstant = 1 / Math.sqrt(2 * Math.PI);\n\n      x = (x - mean) / sigma;\n      let g = gaussianConstant * Math.exp(-.5 * x * x) / sigma;\n\n      if(g < 0.001) g = 0;\n\n      return g;\n  }\n\n  initChart() {\n    let self = this;\n\n    // Complete drawing area\n    this.svg = d3.select(this.element)\n      .append(\"svg\")\n      .attr(\"width\", this.width + this.margin.left + this.margin.right)\n      .attr(\"height\", this.height + this.margin.top + this.margin.bottom);\n\n    // Linechart area\n    this.linechart = this.svg\n        .append(\"g\")\n        .attr(\"width\", this.lc_width)\n        .attr(\"height\", this.lc_height)\n        .attr(\"transform\",\n        \"translate(\" + this.margin.left + \", \"+ this.margin.top +\")\");\n\n    this.focus = this.svg\n        .append(\"g\")\n        .attr(\"transform\",\n        \"translate(\" + this.focus_offset + \", \"+ this.margin.top +\")\")\n\n    this.focus\n        .append(\"rect\")\n        .attr(\"width\", this.focus_width)\n        .attr(\"height\", this.focus_height)\n        .style(\"opacity\", 0)\n        .on(\"mousedown\", function(d) {\n          let out = new Map();\n          self.center = self.y.invert(d3.mouse(this)[1]);\n          self.weight = self.focus_x.invert(d3.mouse(this)[0]);\n          self.updateGauss();\n\n          self.data.forEach(d => {\n            out.set(\n              d[\"id\"],\n              self.gradientColor(self.gaussian(self.gauss_y.invert(d.data[d.data.length-1][self.y_attribute]), self.gauss_y.invert(self.center), self.gauss_sigma(self.weight)))\n            )\n          })\n\n          self.brushing = out;\n\n          self.updateHighlight();\n\n          self.mouse_event = d3.select(this)\n          .on(\"mousemove\", function(d) {\n            let out = new Map();\n            self.center = self.y.invert(d3.mouse(this)[1]);\n            self.weight = self.focus_x.invert(d3.mouse(this)[0]);\n            self.updateGauss();\n\n            self.data.forEach(d => {\n              out.set(\n                d[\"id\"],\n                self.gradientColor(self.gaussian(self.gauss_y.invert(d.data[d.data.length-1][self.y_attribute]), self.gauss_y.invert(self.center), self.gauss_sigma(self.weight)))\n              )\n            })\n\n            self.brushing = out;\n\n            self.updateHighlight();\n          })\n          .on(\"mouseup\", function(d) {\n            self.mouse_event.on(\"mousemove\", null).on(\"mouseup\", null);\n          })\n          // .on(\"mouseleave\", function(d) {\n          //   self.mouse_event.on(\"mousemove\", null).on(\"mouseup\", null);\n          // })\n        })\n        .moveToFront()\n\n    // set the ranges\n    this.x = d3.scaleLinear()\n      .range([0, this.lc_width]);\n    this.y = d3.scaleLinear()\n      .range([this.height, 0]);\n\n    this.focus_x = d3.scaleLinear()\n        .range([0, this.focus_width]);\n\n    this.gauss_x = d3.scaleLinear()\n    this.gauss_y = d3.scaleLinear()\n      .domain([-3, 3])\n    this.gauss_sigma = d3.scaleLinear()\n      .range([0.1, 25])\n      .domain([2, this.focus_width])\n    this.gauss_max_sigma= d3.scaleLinear()\n      .range([50, 1])\n      .domain([1, 100])\n\n    this.gradientColor = d3.scaleLinear()\n      .range([0, 1])\n\n    // add the x Axis\n    this.linechart.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n      .attr(\"class\", \"xAxis\");\n\n      // x axis label\n      this.linechart.append(\"text\")\n          .style(\"text-anchor\", \"middle\")\n          .attr(\"y\", this.height+26)\n          .attr(\"x\", this.width/2)\n          .text(this.x_label);\n\n      // add the x Axis\n      this.focus.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n        .attr(\"class\", \"xAxis\");\n\n        // x axis label\n        this.focus.append(\"text\")\n            .style(\"text-anchor\", \"middle\")\n            .attr(\"y\", this.height+26)\n            .attr(\"x\", this.width/2)\n            .text(\"day\");\n\n    // add the y Axis\n    this.linechart.append(\"g\")\n      .attr(\"class\", \"yAxis\")\n\n      // y axis label\n    this.linechart.append(\"text\")\n        .style(\"text-anchor\", \"middle\")\n        .attr(\"y\", -4)\n        .text(this.y_label);\n\n    // add the y Axis\n    this.focus.append(\"g\")\n      .attr(\"transform\", \"translate(\"+ this.focus_width +\", 0)\")\n      .attr(\"class\", \"yAxis\")\n\n      // y axis label\n    this.focus.append(\"text\")\n        .style(\"text-anchor\", \"middle\")\n        .attr(\"y\", -4)\n        .attr(\"x\", this.focus_width)\n        .text((d) => { return this.y_attribute});\n\n    // define the line\n    this.valueline = d3.line()\n        .x((d) => this.x(d[this.x_attribute]))\n        .y((d) => this.y(d[this.y_attribute]));\n\n    this.focusline = d3.line()\n        .x((d) => this.focus_x(this.gauss_x(d[\"x\"])))\n        .y((d) => this.y(this.gauss_y(d[\"y\"])));\n\n    let y_attribute = this.y_attribute\n\n    // Update axis\n    this.linechart.selectAll(\".xAxis\")\n      .call(d3.axisBottom(this.x));\n    this.linechart.selectAll(\".yAxis\")\n      .call(d3.axisLeft(this.y));\n\n    this.focus.selectAll(\".yAxis\")\n        .call(d3.axisRight(this.y));\n    this.focus.selectAll(\".xAxis\")\n        .call(d3.axisBottom(this.focus_x).ticks(2));\n  }\n\n  updateHighlight() {\n      let self = this;\n\n      this.linechart.selectAll(\"path.line\")\n          .attr(\"opacity\", function(d) {\n            return d[\"highlight\"]\n          })\n\n      this.focus.selectAll(\"rect.bar\")\n          .attr(\"opacity\", function(d) {\n            return self.gradientColor(self.gaussian(self.gauss_y.invert(d.x0 + ((d.x1-d.x0)/2)), self.gauss_y.invert(self.center), self.gauss_sigma(self.weight)))\n          })\n  }\n\n  updateGauss() {\n    let line_data = this.getGaussian();\n    this.gauss_x.range(this.focus_x.domain()).domain(d3.extent(line_data, d => d[\"x\"]))\n\n    this.focus.selectAll(\"path.focusline\").remove();\n    let focus_line = this.focus.selectAll(\"path.focusline\")\n        .data([line_data])\n\n    // Distribution line\n    focus_line.exit().remove();\n\n    focus_line.enter()\n      .append(\"path\")\n      .attr(\"class\", \"focusline\")\n      .attr(\"d\", (d) => this.focusline(d))\n      .moveToFront();\n  }\n\n  updateChart() {\n    // Update domains\n    let x_max = d3.max(this.data, (array) => d3.max<any, any>(array[\"data\"], (d) => d[this.x_attribute]))\n    let y_max = d3.max(this.data, (array) => d3.max<any, any>(array[\"data\"], (d) => d[this.y_attribute]))\n    let x_min = d3.min(this.data, (array) => d3.min<any, any>(array[\"data\"], (d) => d[this.x_attribute]))\n    let y_min = d3.min(this.data, (array) => d3.min<any, any>(array[\"data\"], (d) => d[this.y_attribute]))\n\n    let focus_data = <any> [];\n\n     this.data.forEach((d: any[]) => {\n         focus_data.push(d[\"data\"][d[\"data\"].length-1])\n     })\n\n    this.x.domain([x_min, x_max]);\n    this.y.domain([y_min, y_max]);\n\n    this.gauss_y.range(this.y.domain())\n\n    // let bins = this.histogram(focus_data)\n    let bins = d3.histogram()\n        .value((d) => d[this.y_attribute])\n        .domain(this.y.domain())\n        .thresholds(d3.range(y_min, y_max, (y_max - y_min) / 20))\n        (focus_data);\n\n    this.focus_x.domain([0, d3.max(bins, (d: any[]) => d.length)]);\n\n    if(this.focus_x.domain()[1] > 100) {\n      this.gauss_max_sigma.domain([1, this.focus_x.domain()[1]])\n    }\n    this.gauss_sigma.range([0.1, this.gauss_max_sigma(this.focus_x.domain()[1])])\n\n\n    // Select chart\n    this.linechart.selectAll(\"path.line\").remove();\n    let chart = this.linechart.selectAll(\"path.line\")\n        .data(this.data)\n\n\n    this.focus.selectAll(\".bar\").remove();\n    let focus_chart = this.focus.selectAll(\"rect.bars\")\n        .data(bins)\n\n    // Update axis\n    this.linechart.selectAll(\".xAxis\")\n      .call(d3.axisBottom(this.x));\n    this.linechart.selectAll(\".yAxis\")\n      .call(d3.axisLeft(this.y));\n\n    this.focus.selectAll(\".yAxis\")\n        .call(d3.axisRight(this.y));\n    this.focus.selectAll(\".xAxis\")\n        .call(d3.axisBottom(this.focus_x).ticks(2));\n\n    // Linechart\n    chart.exit().remove();\n\n    chart.enter()\n      .append(\"path\")\n      .attr(\"class\", \"line\")\n      .classed(\"highlight\", function(this, d) {\n          if(d[\"highlight\"] == 1) { return true; }\n          else { return false; }\n      })\n      .classed(\"background\", function(this, d) {\n          if(d[\"highlight\"] == 2) { return true; }\n          else { return false; }\n      })\n      .attr(\"d\", (d) => this.valueline(d[\"data\"]));\n\n    // Barchart\n    // Remove bars\n    focus_chart.exit().remove();\n\n    // Add bars\n    focus_chart.enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"transform\", (d) => {\n\t\t  return \"translate(0,\" + this.y(d.x1) + \")\"; })\n      .attr(\"width\", (d) => { return  this.focus_x(d.length); })\n      .attr(\"height\", (d) => {\n          return this.y(d.x0) - this.y(d.x1) - 1;\n      })\n      .moveToBack();\n\n  }\n}\n","import * as d3 from \"d3\";\nimport {inject, noView, bindable, bindingMode, BindingEngine} from 'aurelia-framework';\n\n@inject(Element, BindingEngine)\n@noView()\nexport class LineChartLive {\n  // One-Way\n  @bindable margin = { top: 20, right: 60, bottom: 35, left: 60, middle: 20 };\n  @bindable x_attribute = \"x\";\n  @bindable y_attribute = \"y\";\n  @bindable x_label = \"days\";\n  @bindable y_label = \"y\";\n  @bindable redraw = 0;\n\n  // Two-Way\n  @bindable({ defaultBindingMode: bindingMode.twoWay }) brushing;\n\n  // Observed Variables\n  @bindable data = [];\n\n  // Aurelia variables\n  private element;\n  private subscription;\n\n  // D3 variables\n  private mouse_event;\n  private svg;\n  private linechart;\n  private focus;\n  private x;\n  private y;\n  private focus_x;\n  private gauss_x;\n  private gauss_y;\n  private gauss_sigma;\n  private gradientColor;\n  private valueline;\n  private focusline;\n  private histogram;\n  private brush;\n  private center = 1.0;\n  private weight = 1.0;\n\n  // set the dimensions and margins of the graph\n  private width;\n  private height;\n  private x_size = 900;\n  private y_size = 500;\n\n  constructor(element, private bindingEngine) {\n    this.element = element;\n  }\n\n  // This is called after binding attributes\n  attached() {\n      if (this.data) {\n        // subscribe to the data array and watch for changes\n        this.subscription = this.bindingEngine\n          .collectionObserver(this.data)\n          .subscribe(splices => this.dataMutated(splices));\n        }\n\n      // set the dimensions and margins of the graph\n      this.x_size = this.element.parentElement.offsetWidth;\n      this.y_size = this.element.parentElement.offsetHeight;\n\n      this.width = this.x_size - this.margin.left - this.margin.right;\n      this.height = this.y_size - this.margin.top - this.margin.bottom;\n\n\n      this.initChart()\n  }\n\n  // Update the chart if the data changes\n  dataMutated(splices) {\n      if(this.data.length > 1) {\n            this.updateChart();\n      }\n      else {\n          this.svg.selectAll(\".line\").remove()\n      }\n  }\n\n  redrawChanged() {\n      if(this.data.length > 1) {\n          this.updateChart();\n      }\n  }\n\n  unbind() {\n      this.subscription.dispose();\n  }\n\n  initChart() {\n    let self = this;\n\n    // Complete drawing area\n    this.svg = d3.select(this.element)\n      .append(\"svg\")\n      .attr(\"width\", this.width + this.margin.left + this.margin.right)\n      .attr(\"height\", this.height + this.margin.top + this.margin.bottom);\n\n    // Linechart area\n    this.linechart = this.svg\n        .append(\"g\")\n        .attr(\"width\", this.width)\n        .attr(\"height\", this.height)\n        .attr(\"transform\",\n        \"translate(\" + this.margin.left + \", \"+ this.margin.top +\")\");\n\n    // set the ranges\n    this.x = d3.scaleLinear()\n      .range([0, this.width]);\n    this.y = d3.scaleLinear()\n      .range([this.height, 0]);\n\n    // add the x Axis\n    this.linechart.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n      .attr(\"class\", \"xAxis\");\n\n      // x axis label\n      this.linechart.append(\"text\")\n          .style(\"text-anchor\", \"middle\")\n          .attr(\"y\", this.height+26)\n          .attr(\"x\", this.width/2)\n          .text(this.x_label);\n\n    // add the y Axis\n    this.linechart.append(\"g\")\n      .attr(\"class\", \"yAxis\")\n\n      // y axis label\n    this.linechart.append(\"text\")\n        .style(\"text-anchor\", \"left\")\n        .attr(\"y\", -4)\n        .text(this.y_label);\n\n    // define the line\n    this.valueline = d3.line()\n        .x((d) => this.x(d[this.x_attribute]))\n        .y((d) => this.y(d[this.y_attribute]));\n\n    let y_attribute = this.y_attribute\n\n    // Update axis\n    this.linechart.selectAll(\".xAxis\")\n      .call(d3.axisBottom(this.x));\n    this.linechart.selectAll(\".yAxis\")\n      .call(d3.axisLeft(this.y));\n  }\n\n  updateHighlight() {\n      let self = this;\n\n      this.linechart.selectAll(\"path.line\")\n          .attr(\"opacity\", function(d) {\n            return d[\"highlight\"]\n          })\n  }\n\n  updateChart() {\n    // Update domains\n    let x_max = d3.max(this.data, (d) => d[this.x_attribute])\n    let y_max = d3.max(this.data, (d) => d[this.y_attribute])\n    let x_min = d3.min(this.data, (d) => d[this.x_attribute])\n    let y_min = d3.min(this.data, (d) => d[this.y_attribute])\n\n    this.x.domain([x_min, x_max]);\n    this.y.domain([y_min, y_max]);\n\n    // Select chart\n    this.linechart.selectAll(\"path.line\").remove();\n    let chart = this.linechart.selectAll(\"path.line\")\n        .data([this.data])\n\n    // Update axis\n    this.linechart.selectAll(\".xAxis\")\n      .call(d3.axisBottom(this.x));\n    this.linechart.selectAll(\".yAxis\")\n      .call(d3.axisLeft(this.y));\n\n\n    // Linechart\n    chart.exit().remove();\n\n    chart.enter()\n      .append(\"path\")\n      .attr(\"class\", \"line\")\n      .classed(\"highlight\", function(this, d) {\n          if(d[\"highlight\"] == 1) { return true; }\n          else { return false; }\n      })\n      .classed(\"background\", function(this, d) {\n          if(d[\"highlight\"] == 2) { return true; }\n          else { return false; }\n      })\n      .merge(chart)\n      .attr(\"d\", (d) => this.valueline(d));\n  }\n}\n","import * as d3 from \"d3\";\nimport * as _ from 'lodash';\nimport {inject, noView, bindable, bindingMode, BindingEngine} from 'aurelia-framework';\n\n@inject(Element, BindingEngine)\n@noView()\nexport class parallelCoordinatesGauss {\n    // One-Way\n    @bindable margin = { top: 60, right: 20, bottom: 30, left: 40 };\n    @bindable redraw = 0;\n\n    // Two-Way\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) brushing;\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) selected;\n\n    // Observed Variables\n    @bindable data = [];\n\n    // Aurelia variables\n    private element;\n    private subscription;\n\n    // D3 variables\n    private svg;\n    private x = {};\n    private y;\n    private dimensions = <any>[];\n    private line;\n    private background;\n    private foreground;\n\n    // set the dimensions and margins of the graph\n    private x_size = 500;\n    private y_size = 500;\n    private width;\n    private height;\n\n    constructor(element, private bindingEngine) {\n        this.element = element;\n    }\n\n    // This is called after binding attributes\n    attached() {\n        if (this.data) {\n            // subscribe to the data array and watch for changes\n            this.subscription = this.bindingEngine\n                .collectionObserver(this.data)\n                .subscribe(splices => this.dataMutated(splices));\n        }\n\n        // set the dimensions and margins of the graph\n        this.x_size = this.element.parentElement.offsetWidth\n        this.y_size = this.element.parentElement.offsetHeight\n\n        this.width = this.x_size - this.margin.left - this.margin.right;\n        this.height = this.y_size - this.margin.top - this.margin.bottom;\n\n        // Draw the graph\n        this.initChart()\n        this.updateChart();\n    }\n\n    // Update the chart if the data changes\n    dataMutated(splices) {\n        this.updateChart();\n    }\n\n    redrawChanged() {\n        if(this.data.length > 1) {\n            this.updateHighlight();\n        }\n    }\n\n    // Remove the watcher after disposing the class\n    unbind() {\n        this.subscription.dispose();\n    }\n\n    // D3 functions\n\n    // Draw the lines\n    private path(d) {\n        return this.line(this.dimensions.map((p) => {\n            return [this.x[p](d[p]), this.y(p)]; }));\n    }\n\n    // Update external variables with current brushes\n    private getBrushing = (g, x, dat) => {\n        let temp = <any>[];\n        let brushes = new Map();\n\n        g.selectAll(\".brush\")\n          .filter(function(this, d) {\n            return d3.brushSelection(this);\n          })\n          .each(function(this, d) {\n              let brush_selection =  d3.brushSelection(this)\n              let extent = <any>[]\n              let selection = <any>[];\n\n              if(brush_selection != null) {\n                  extent = [x[d].invert(brush_selection[1]), x[d].invert(brush_selection[0])]\n                }\n\n              let brushed_elements = dat.filter(x => x[\"data\"][d] >= extent[1] && x[\"data\"][d] <= extent[0])\n\n              brushes.set(d, brushed_elements.map(x => x[\"id\"]))\n          });\n\n          let brushed = _.intersection(...Array.from(brushes.values()));\n\n          // If no element is brushed return a x to let the system know that\n          // there are brushes active\n          if(brushes.size > 0 && brushed.length == 0) {\n              brushed.push(\"x\")\n          }\n\n          this.brushing = brushed;\n    }\n\n    initChart() {\n        // append the svg object to the chart div of the page\n        // append a 'group' element to 'svg'\n        // moves the 'group' element to the top left margin\n        this.svg = d3.select(this.element)\n            .append(\"svg\")\n            .attr(\"width\", this.width + this.margin.left + this.margin.right)\n            .attr(\"height\", this.height + this.margin.top + this.margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\",\n            \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\");\n\n        // set the x range\n        this.y = d3.scalePoint()\n            .range([0, this.height]);\n\n        // Basic initialization\n        this.line = d3.line()\n        .curve(d3.curveMonotoneY);\n    }\n\n    updateHighlight() {\n        this.svg.selectAll(\".line\")\n            .attr(\"opacity\", function(d) {\n              return d[\"highlight\"]\n            })\n    }\n\n    updateChart() {\n        // Get current dataset dimensions: Keys of the map\n        if(this.data.length > 0) {\n            this.dimensions = d3.keys(this.data[0][\"data\"]).filter((d) => {\n                return d != \"name\"\n            });\n        }\n\n        // Create corresponding y axis\n        // Currently only linear values\n        this.dimensions.map((dim) => {\n            let ext = <any> d3.extent(this.data, (data) => {\n                return data[\"data\"][dim];\n            })\n\n            if(ext[0] == ext[1]) {\n                ext[0] -= ext[0]*0.1;\n                ext[1] += ext[1]*0.1;\n            }\n\n            this.x[dim] = d3.scaleLinear()\n                    .range([this.width, 0])\n                    .domain([ext[1], ext[0]])\n        });\n\n        // Create the x axis\n        this.y.domain(this.dimensions);\n\n        // Add grey background lines for context.\n        this.background = this.svg.append(\"g\")\n            .selectAll(\"path\")\n            .data(this.data)\n            .enter().append(\"path\")\n            .attr(\"class\", \"line\")\n            .classed(\"highlight\", function(this, d) {\n                if(d[\"highlight\"] == 1) { return true; }\n                else { return false; }\n            })\n            .classed(\"background\", function(this, d) {\n                if(d[\"highlight\"] == 2) { return true; }\n                else { return false; }\n            })\n            .attr(\"d\", (d) => { return this.path(d[\"data\"])})\n            .on(\"click\", (d) => {\n              this.selected = d[\"id\"]\n            });\n\n        // Create local versions of class variables\n        // This is necessary due to the nature of TS and D3\n\n        let width = this.width\n        let x = this.x;\n        let dat = this.data\n        let getBrushing = this.getBrushing;\n\n        // Create drawing area\n        let g = this.svg.selectAll(\".dimension\")\n            .data(this.dimensions)\n          .enter().append(\"g\")\n            .attr(\"class\", \"dimension\")\n            .attr(\"transform\", (d) => {\n                return \"translate(0,\" + this.y(d) + \")\"; });\n\n        // Add axis\n        g.append(\"g\")\n            .each(function(this, d) {\n                 d3.select(this).call(d3.axisTop(x[d]));\n             });\n\n        // Add tiltes for the axis\n        g.append(\"text\")\n            .style(\"text-anchor\", \"middle\")\n            .attr(\"y\", -9)\n            .attr(\"transform\", \"rotate(-90)\")\n            .text((d) => { return d; });\n\n        // Add and store a brush for each axis.\n        g.append(\"g\")\n            .attr(\"class\", \"brush\")\n            .each(function(this, d) {\n                 d3.select(this).call(d3.brushX()\n                .extent([[0, -9], [width, 9]])\n                .on(\"brush\", () => {\n                     if (!d3.event.sourceEvent) return; // Only transition after input.\n\n                     getBrushing(g, x, dat)\n                })\n                .on(\"end\", () => {\n                     if (!d3.event.sourceEvent) return; // Only transition after input.\n\n                     getBrushing(g, x, dat)\n                })\n            );\n        })\n    }\n}\n","import * as d3 from \"d3\";\nimport * as _ from 'lodash';\nimport {inject, noView, bindable, bindingMode, BindingEngine} from 'aurelia-framework';\n\n@inject(Element, BindingEngine)\n@noView()\nexport class parallelCoordinatesVertical {\n    // One-Way\n    @bindable margin = { top: 60, right: 20, bottom: 30, left: 40 };\n    @bindable redraw = 0;\n\n    // Two-Way\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) brushing;\n\n    // Observed Variables\n    @bindable data = [];\n\n    // Aurelia variables\n    private element;\n    private subscription;\n\n    // D3 variables\n    private svg;\n    private x = {};\n    private y;\n    private dimensions = <any>[];\n    private line;\n    private background;\n    private foreground;\n\n    // set the dimensions and margins of the graph\n    private x_size = 500;\n    private y_size = 500;\n    private width;\n    private height;\n\n    constructor(element, private bindingEngine) {\n        this.element = element;\n    }\n\n    // This is called after binding attributes\n    attached() {\n        if (this.data) {\n            // subscribe to the data array and watch for changes\n            this.subscription = this.bindingEngine\n                .collectionObserver(this.data)\n                .subscribe(splices => this.dataMutated(splices));\n        }\n\n        // set the dimensions and margins of the graph\n        this.x_size = this.element.parentElement.offsetWidth\n        this.y_size = this.element.parentElement.offsetHeight\n\n        this.width = this.x_size - this.margin.left - this.margin.right;\n        this.height = this.y_size - this.margin.top - this.margin.bottom;\n\n        // Draw the graph\n        this.initChart()\n        this.updateChart();\n    }\n\n    // Update the chart if the data changes\n    dataMutated(splices) {\n        this.updateChart();\n    }\n\n    redrawChanged() {\n        if(this.data.length > 1) {\n            this.updateHighlight();\n        }\n    }\n\n    // Remove the watcher after disposing the class\n    unbind() {\n        this.subscription.dispose();\n    }\n\n    // D3 functions\n\n    // Draw the lines\n    private path(d) {\n        return this.line(this.dimensions.map((p) => {\n            return [this.x[p](d[p]), this.y(p)]; }));\n    }\n\n    // Update external variables with current brushes\n    private getBrushing = (g, x, dat) => {\n        let temp = <any>[];\n        let brushes = new Map();\n\n        g.selectAll(\".brush\")\n          .filter(function(this, d) {\n            return d3.brushSelection(this);\n          })\n          .each(function(this, d) {\n              let brush_selection =  d3.brushSelection(this)\n              let extent = <any>[]\n              let selection = <any>[];\n\n              if(brush_selection != null) {\n                  extent = [x[d].invert(brush_selection[1]), x[d].invert(brush_selection[0])]\n                }\n\n              let brushed_elements = dat.filter(x => x[\"data\"][d] >= extent[0] && x[\"data\"][d] <= extent[1])\n\n              brushes.set(d, brushed_elements.map(x => x[\"id\"]))\n          });\n\n          let brushed = _.intersection(...Array.from(brushes.values()));\n\n          // If no element is brushed return a x to let the system know that\n          // there are brushes active\n          if(brushes.size > 0 && brushed.length == 0) {\n              brushed.push(\"x\")\n          }\n\n          this.brushing = brushed;\n    }\n\n    initChart() {\n        // append the svg object to the chart div of the page\n        // append a 'group' element to 'svg'\n        // moves the 'group' element to the top left margin\n        this.svg = d3.select(this.element)\n            .append(\"svg\")\n            .attr(\"width\", this.width + this.margin.left + this.margin.right)\n            .attr(\"height\", this.height + this.margin.top + this.margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\",\n            \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\");\n\n        // set the x range\n        this.y = d3.scalePoint()\n            .range([0, this.height]);\n\n        // Basic initialization\n        this.line = d3.line()\n        .curve(d3.curveMonotoneY);\n    }\n\n    updateHighlight() {\n        this.svg.selectAll(\".line\")\n            .classed(\"highlight\", function(this, d) {\n                if(d[\"highlight\"] == 1) { return true; }\n                else { return false; }\n            })\n            .classed(\"background\", function(this, d) {\n                if(d[\"highlight\"] == 2) { return true; }\n                else { return false; }\n            });\n\n        this.svg.selectAll(\".line.highlight\").moveToFront();\n    }\n\n    updateChart() {\n        // Get current dataset dimensions: Keys of the map\n        if(this.data.length > 0) {\n            this.dimensions = d3.keys(this.data[0][\"data\"]).filter((d) => {\n                return d != \"name\"\n            });\n        }\n\n        // Create corresponding y axis\n        // Currently only linear values\n        this.dimensions.map((dim) => {\n            let ext = <any> d3.extent(this.data, (data) => {\n                return data[\"data\"][dim];\n            })\n\n            if(ext[0] == ext[1]) {\n                ext[0] -= ext[0]*0.1;\n                ext[1] += ext[1]*0.1;\n            }\n\n            this.x[dim] = d3.scaleLinear()\n                    .range([this.width, 0])\n                    .domain([ext[1], ext[0]])\n        });\n\n        // Create the x axis\n        this.y.domain(this.dimensions);\n\n        // Add grey background lines for context.\n        this.background = this.svg.append(\"g\")\n\n            .selectAll(\"path\")\n            .data(this.data)\n            .enter().append(\"path\")\n            .attr(\"class\", \"line\")\n            .classed(\"highlight\", function(this, d) {\n                if(d[\"highlight\"] == 1) { return true; }\n                else { return false; }\n            })\n            .classed(\"background\", function(this, d) {\n                if(d[\"highlight\"] == 2) { return true; }\n                else { return false; }\n            })\n            .attr(\"d\", (d) => { return this.path(d[\"data\"])});\n\n        // Create local versions of class variables\n        // This is necessary due to the nature of TS and D3\n\n        let width = this.width\n        let x = this.x;\n        let dat = this.data\n        let getBrushing = this.getBrushing;\n\n        // Create drawing area\n        let g = this.svg.selectAll(\".dimension\")\n            .data(this.dimensions)\n          .enter().append(\"g\")\n            .attr(\"class\", \"dimension\")\n            .attr(\"transform\", (d) => {\n                return \"translate(0,\" + this.y(d) + \")\"; });\n\n        // Add axis\n        g.append(\"g\")\n            .each(function(this, d) {\n                 d3.select(this).call(d3.axisTop(x[d]));\n             });\n\n        // Add tiltes for the axis\n        g.append(\"text\")\n            .style(\"text-anchor\", \"middle\")\n            .attr(\"y\", -9)\n            .attr(\"transform\", \"rotate(-90)\")\n            .text((d) => { return d; });\n\n        // Add and store a brush for each axis.\n        g.append(\"g\")\n            .attr(\"class\", \"brush\")\n            .each(function(this, d) {\n                 d3.select(this).call(d3.brushX()\n                .extent([[0, -9], [width, 9]])\n                .on(\"brush\", () => {\n                     if (!d3.event.sourceEvent) return; // Only transition after input.\n\n                     getBrushing(g, x, dat)\n                })\n                .on(\"end\", () => {\n                     if (!d3.event.sourceEvent) return; // Only transition after input.\n\n                     getBrushing(g, x, dat)\n                })\n            );\n        })\n    }\n}\n","import * as d3 from \"d3\";\nimport {inject, noView, bindable, bindingMode, BindingEngine} from 'aurelia-framework';\n\n@inject(Element, BindingEngine)\n@noView()\nexport class SpatialGrid {\n  // One-Way\n  @bindable margin = { top: 20, right: 20, bottom: 20, left: 20 };\n  @bindable x_attribute = \"x\";\n  @bindable y_attribute = \"y\";\n  @bindable x_label = \"days\";\n  @bindable y_label = \"y\";\n  @bindable redraw = 0;\n\n  // Two-Way\n  @bindable({ defaultBindingMode: bindingMode.twoWay }) brushing;\n\n  // Observed Variables\n  @bindable data = [];\n\n  // Aurelia variables\n  private element;\n  private subscription;\n  private second_subscription;\n\n  // D3 variables\n  private mouse_event;\n  private svg;\n  private drawing_area;\n  private focus;\n  private x;\n  private y;\n  private focus_x;\n  private gauss_x;\n  private gauss_y;\n  private gauss_sigma;\n  private gradientColor;\n  private valueline;\n  private focusline;\n  private histogram;\n  private brush;\n  private center = 1.0;\n  private weight = 1.0;\n\n  // set the dimensions and margins of the graph\n  private width;\n  private height;\n  private x_size = 440;\n  private y_size = 440;\n\n  private redrawGridNecessary = false;\n\n  constructor(element, private bindingEngine) {\n    this.element = element;\n  }\n\n  // This is called after binding attributes\n  attached() {\n      if (this.data) {\n        // subscribe to the data array and watch for changes\n        this.subscription = this.bindingEngine\n          .collectionObserver(this.data)\n          .subscribe(splices => this.dataMutated(splices));\n        }\n\n      // set the dimensions and margins of the graph\n      // this.x_size = this.element.parentElement.offsetWidth;\n      // this.y_size = this.element.parentElement.offsetHeight;\n\n      this.width = this.x_size - this.margin.left - this.margin.right;\n      this.height = this.y_size - this.margin.top - this.margin.bottom;\n\n      // this.draw_grid([\"S\",\"#dcdcdc\",\"I\",\"#c82605\",\"R\",\"#6fc041\"])\n  }\n\n  // Update the chart if the data changes\n  dataMutated(splices) {\n    if(!this.svg) {\n      this.draw_grid()\n    }\n    if(this.data.length > 1) {\n      // this.draw_grid([\"S\",\"#dcdcdc\",\"I\",\"#c82604\",\"R\",\"#5fc40\"])\n      // this.update_grid([\"S\",\"#dcdcdc\",\"I\",\"#c82605\",\"R\",\"#6fc041\"]);\n      if(this.redrawGridNecessary) {\n        this.svg.remove()\n        this.draw_grid()\n        this.redrawGridNecessary = false;\n      }\n      this.update_grid();\n    }\n  }\n\n  redrawChanged() {\n    if(this.svg) {\n      this.update_grid();\n    }\n  }\n\n  unbind() {\n      this.subscription.dispose();\n  }\n\n  updateGridSize() {\n    let self = this;\n    let grid_length = this.data.length;\n\n    let rw = Math.floor(this.width/grid_length);\n    let rh = Math.floor(this.height/grid_length);\n\n    this.drawing_area.selectAll('g').remove();\n\n    this.drawing_area.selectAll('g')\n            .data(this.data)\n            .enter()\n            .append('g')\n            .attr('transform', function (d, i) {\n              return 'translate(0, ' + (self.width/grid_length) * i + ')';\n            });\n\n    this.drawing_area.selectAll('rect')\n            .data(this.data)\n            .data( (d) => {\n              return d;\n            })\n            .enter()\n            .append('rect')\n            .attr('x', function (d, i) {\n              return (self.width/grid_length) * i;\n            })\n            .attr('width', rw)\n            .attr('height', rh)\n            .attr('class', d => <string>d);\n  }\n\n  draw_grid() {\n    let self = this;\n    let grid_length = this.data.length;\n\n    this.svg = d3.select(this.element)\n          .append('svg')\n          .attr('width', this.width)\n          .attr('height', this.height)\n          .attr(\"transform\",\n          \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\");\n\n    let rw = Math.floor(this.width/grid_length);\n    let rh = Math.floor(this.height/grid_length);\n\n    this.drawing_area = this.svg.selectAll('g')\n            .data(this.data)\n            .enter()\n            .append('g')\n            .attr('transform', function (d, i) {\n              return 'translate(0, ' + (self.width/grid_length) * i + ')';\n            });\n\n    this.drawing_area.selectAll('rect')\n            .data(this.data)\n            .data( (d) => {\n              return d;\n            })\n            .enter()\n            .append('rect')\n            .attr('x', function (d, i) {\n              return (self.width/grid_length) * i;\n            })\n            .attr('width', rw)\n            .attr('height', rh)\n            .attr('class', d => <string>d);\n    }\n\n    update_grid(){\n        this.svg.selectAll('g')\n            .data(this.data)\n            .selectAll('rect')\n            .data(function (d) {\n              return d;\n            })\n            .attr('class', d => <string>d)\n    }\n\n}\n","import * as d3 from \"d3\";\nimport { inject, noView, bindable, bindingMode, BindingEngine } from 'aurelia-framework';\n\n@inject(Element, BindingEngine)\n@noView()\nexport class stackedBarChart {\n  // One-Way\n  @bindable margin = { top: 20, right: 60, bottom: 35, left: 60, middle: 20 };\n  @bindable x_attribute = \"x\";\n  @bindable y_attribute = \"y\";\n  @bindable redraw = 0;\n\n  // Two-Way\n  @bindable({ defaultBindingMode: bindingMode.twoWay }) brushing;\n\n  // Observed Variables\n  @bindable data = [];\n\n  // Aurelia variables\n  private element;\n  private subscription;\n  private resize_sub;\n\n  // D3 variables\n  private svg;\n  private barchart;\n  private x;\n  private y;\n  private z;\n  private legend;\n\n  // set the dimensions and margins of the graph\n  private width;\n  private height;\n  private x_size = 900;\n  private y_size = 500;\n\n  constructor(element, private bindingEngine) {\n    this.element = element;\n  }\n\n  // This is called after binding attributes\n  attached() {\n    if (this.data) {\n      // subscribe to the data array and watch for changes\n      this.subscription = this.bindingEngine\n        .collectionObserver(this.data)\n        .subscribe(splices => this.dataMutated(splices));\n    }\n\n    this.resize_sub = this.bindingEngine\n      .propertyObserver(this.element.parentElement, \"offsetWidth\")\n      .subscribe(n => this.resize())\n\n    // set the dimensions and margins of the graph\n    this.x_size = this.element.parentElement.offsetWidth;\n    this.y_size = this.element.parentElement.offsetHeight;\n\n    this.width = this.x_size - this.margin.left - this.margin.right;\n    this.height = this.y_size - this.margin.top - this.margin.bottom;\n\n    this.initChart()\n    this.updateChart();\n  }\n\n  resize() {\n    this.x_size = this.element.parentElement.offsetWidth;\n    this.y_size = this.element.parentElement.offsetHeight;\n\n    this.width = this.x_size - this.margin.left - this.margin.right;\n    this.height = this.y_size - this.margin.top - this.margin.bottom;\n\n    this.resizeChart();\n    this.updateChart();\n  }\n\n  // Update the chart if the data changes\n  dataMutated(splices) {\n    if (this.data.length > 0) {\n      this.updateChart();\n    }\n    else {\n      this.svg.selectAll(\".medikament\").remove()\n    }\n  }\n\n  unbind() {\n    this.subscription.dispose();\n    this.resize_sub.dispose();\n  }\n\n  initChart() {\n    // Complete drawing area\n    this.svg = d3.select(this.element)\n      .append(\"svg\")\n      .attr(\"width\", this.width + this.margin.left + this.margin.right)\n      .attr(\"height\", this.height + this.margin.top + this.margin.bottom);\n\n    // Linechart area\n    this.barchart = this.svg\n      .append(\"g\")\n      .attr(\"width\", this.width)\n      .attr(\"height\", this.height)\n      .attr(\"transform\",\n      \"translate(\" + this.margin.left + \", \" + this.margin.top + \")\");\n\n    // set the ranges\n    this.x = d3.scaleBand()\n      .padding(0.1)\n      .range([0, this.width]);\n    this.y = d3.scaleLinear()\n      .range([this.height, 0]);\n    this.z = d3.scaleOrdinal()\n      .range([\"#33CA7F\" ,\"#ECE4B7\", \"#FC9F5B\"])\n\n    // add the x Axis\n    this.barchart.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n      .attr(\"class\", \"xAxis\");\n\n    // add the y Axis\n    this.barchart.append(\"g\")\n      .attr(\"class\", \"yAxis\")\n\n    // y axis label\n    this.barchart.append(\"text\")\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"y\", -4)\n      .text(\"Kosten\");\n\n\n    // // Add text\n    // this.barchart.append(\"text\")\n    //   .attr(\"class\", \"bar_text\")\n    //   .style(\"text-anchor\", \"middle\")\n    //   // .attr(\"x\", function(d) { return this.x(d.data.x); })\n    //   .text(\"test\")\n    //   // .text(function(d) { return totals[d.data.x]; })\n\n    // add legend\n    this.legend = this.barchart.append(\"g\")\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", 10)\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"class\", \"legend\");\n  }\n\n  resizeChart() {\n    this.svg\n      .attr(\"width\", this.width + this.margin.left + this.margin.right)\n      .attr(\"height\", this.height + this.margin.top + this.margin.bottom);\n\n    // Linechart area\n    this.barchart\n      .attr(\"width\", this.width)\n      .attr(\"height\", this.height)\n      .attr(\"transform\",\n      \"translate(\" + this.margin.left + \", \" + this.margin.top + \")\");\n\n    // set the ranges\n    this.x\n      .range([0, this.width]);\n    this.y\n      .range([this.height, 0]);\n\n    // add the x Axis\n    this.barchart.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n  }\n  updateChart() {\n    let self = this\n\n    let keys = []\n    if (this.data.length > 0) keys = Object.getOwnPropertyNames(this.data[0]).slice(1);\n\n    let totals = this.data.map(x => {\n      let s = { key: x.x, value: 0 };\n      keys.forEach(y => {\n        s.value = s.value + +x[y];\n      })\n      return s;\n    })\n\n    this.x.domain(this.data.map(function(d) { return d.x; }));\n    this.y.domain([0, d3.max(totals, x => x.value)]).nice();\n    this.z.domain(keys);\n\n    let t = d3.transition(\"default\")\n      .duration(500);\n\n    let stack = d3.stack().keys(keys)(self.data)\n\n    // Delete all bars before rerendering them\n    this.barchart.selectAll(\".medikament\").remove()\n\n    // Join\n    let chart = this.barchart.selectAll(\".medikament\")\n      .data(stack, x => x.key)\n\n    // Enter\n    let bars = chart.enter().append(\"g\")\n      .attr(\"class\", \"medikament\")\n      .attr(\"fill\", function(d) { return self.z(d.key); })\n\n    bars.selectAll(\"rect\")\n             .data(function(d) { return d; })\n             .enter().append(\"rect\")\n               .attr(\"x\", function(d) { return self.x(d.data.x); })\n               .attr(\"width\", self.x.bandwidth())\n               .attr(\"y\", this.height)\n               .attr(\"height\", 0)\n\n    // Update\n    bars.selectAll(\"rect\")\n      .transition(t)\n      .attr(\"y\", function(d) { return self.y(d[1]); })\n      .attr(\"height\", function(d) { return self.y(d[0]) - self.y(d[1]); })\n\n    // Exit\n    chart.exit().remove();\n\n    // Add texts\n    let labels = this.barchart.selectAll(\".labels\")\n      .data(totals, x => x.key)\n\n    labels.enter().append(\"text\")\n      .attr(\"class\", \"labels\")\n      .style(\"text-anchor\", \"middle\")\n        .merge(labels)\n      .attr(\"x\", function(d) { return self.x(d.key) + self.x.bandwidth()/2; })\n      .attr(\"y\", function(d) { return self.y(d.value) - 3; })\n      .text(function(d) { return d.value; })\n\n    labels.exit().remove();\n\n    this.barchart.selectAll(\".xAxis\")\n      .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n      .call(d3.axisBottom(this.x));\n\n    this.barchart.selectAll(\".yAxis\")\n      .call(d3.axisLeft(this.y));\n\n    // Join\n    let legend_group = this.legend\n      .selectAll(\"g\")\n      .data(keys.reverse(), x => x)\n\n    // Enter\n    let legends = legend_group.enter().append(\"g\")\n\n    legends.append(\"rect\")\n      .attr(\"x\", this.width - 19)\n      .attr(\"width\", 19)\n      .attr(\"height\", 19)\n      .attr(\"fill\", this.z);\n\n    legends.append(\"text\")\n      .attr(\"x\", this.width - 24)\n      .attr(\"y\", 9.5)\n      .attr(\"dy\", \"0.32em\")\n      .text(function(d) { return d; });\n\n    // Update\n    legend_group.merge(legends).attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n    // Exit\n    legend_group.exit().remove();\n  }\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","import {autoinject} from 'aurelia-framework';\r\nimport {Sampling} from \"../helper/sampling\"\r\nimport * as d3 from \"d3\"\r\n\r\n// This magic line removed the error messages for numeric\r\ndeclare var numeric: any;\r\ndeclare var lobos: any;\r\n\r\n@autoinject\r\nexport class Genetic {\r\n  p = 0.5;\r\n  params = [];\r\n  time_range = [];\r\n  populations = [];\r\n  rnd;\r\n  sampling;\r\n\r\n  constructor(private event_range, private population_range, private leftover_range, private generations, private n_samples) {\r\n    for(let i = 0; i < this.generations; i++) {\r\n      this.time_range.push(i);\r\n    }\r\n\r\n    this.sampling = new Sampling(\"sobol\");\r\n    this.rnd = d3.randomUniform();\r\n  }\r\n\r\n  compute_model() {\r\n    let out = [];\r\n    this.get_params(this.sampling.get_points(this.n_samples, 3))\r\n\r\n    this.params.forEach( d => {\r\n      this.populations.length = 0;\r\n      out.push(this.simulation(d));\r\n    })\r\n\r\n    return out;\r\n  }\r\n\r\n  simulation(params) {\r\n      // Reset p for a new simulation\r\n      this.p = 0.5;\r\n      let runs = [];\r\n      let population_size = 0;\r\n\r\n      for (let i = 1; i < this.generations+1; i++) {\r\n        if(this.rnd()<params[1]) {\r\n          population_size = Math.round(params[2])\r\n        }\r\n        else {\r\n          population_size = params[0]\r\n        }\r\n\r\n        this.populations.push(population_size)\r\n\r\n        runs.push({\r\n          pop: this.effective_population(),\r\n          p: this.next_generation(population_size)});\r\n      }\r\n\r\n      return runs;\r\n  }\r\n\r\n  next_generation(population_size) {\r\n      let draws = 2 * population_size;\r\n      let a1 = 0;\r\n      let a2 = 0;\r\n\r\n      for (let i = 0; i < draws; i = i + 1) {\r\n          if (Math.random() <= this.p) {\r\n              a1 = a1 + 1;\r\n          }\r\n          else {\r\n              a2 = a2 + 1;\r\n          }\r\n      }\r\n\r\n      this.p = a1/draws;\r\n\r\n      return this.p;\r\n  }\r\n\r\n  // Harmonic mean of all populations\r\n  effective_population() {\r\n    let denominator = 0;\r\n\r\n    for (var i = 0; i < this.populations.length; i = i + 1) {\r\n        denominator = denominator + (1 / this.populations[i]);\r\n    }\r\n\r\n    return Math.round(this.populations.length / denominator);\r\n  }\r\n\r\n  get_params(points) {\r\n    let pop_scale = d3.scaleLinear()\r\n      .domain([0, 1])\r\n      .range(this.population_range);\r\n\r\n    let event_scale = d3.scaleLinear()\r\n      .domain([0, 1])\r\n      .range(this.event_range);\r\n\r\n    let leftover_scale = d3.scaleLinear()\r\n      .domain([0, 1])\r\n      .range(this.leftover_range);\r\n\r\n    points.forEach( d => {\r\n        this.params.push([\r\n            pop_scale(d[0]),\r\n            event_scale(d[1]),\r\n            leftover_scale(d[2])\r\n        ])\r\n    })\r\n  }\r\n}\r\n","import {autoinject} from 'aurelia-framework';\nimport {Sampling} from \"../helper/sampling\"\nimport * as d3 from \"d3\"\n\n// This magic line removed the error messages for numeric\ndeclare var numeric: any;\ndeclare var lobos: any;\n\n@autoinject\nexport class SIR {\n  private ND;\n  private R0;\n  private INPUT;\n  public time_range = <any[]> [];\n  public params = <any[]> [];\n  private sampling;\n\n  // Params for the computations\n  private rho;\n  private v;\n  private mu;\n  private beta;\n  private gamma;\n\n  constructor(private rho_range, private v_range,\n    private mu_range, private beta_range, private gamma_range,\n    private NY, private S0, private I0) {\n      // Update variables\n      this.ND = this.NY*365\n      this.R0 = 1 - this.S0 - this.I0\n      this.INPUT = [+this.S0, +this.I0, +this.R0]\n\n      for (let i = 0; i < this.ND; i++) {\n          this.time_range.push(i)\n      }\n\n      this.sampling = new Sampling(\"sobol\");\n  }\n\n  compute_model(n_samples) {\n    let out = <any[]> [];\n    this.get_params(this.sampling.get_points(n_samples, 5))\n\n    this.params.forEach( d => {\n        this.rho = d[0];\n        this.v = d[1];\n        this.mu = d[2];\n        this.beta = d[3];\n        this.gamma = d[4];\n\n        let sol = numeric.dopri(0, this.ND, this.INPUT, this.SIR_model, 1e-6, 5000);\n\n        out.push(sol.at(this.time_range))\n      })\n\n      return out;\n  }\n\n  private SIR_model = (t, INP) => {\n    let Y = [0, 0 ,0]\n    let V = INP\n\n      Y[0] = this.v - this.beta * V[0] * V[1] / V.reduce((a,b) => a + b, 0) - this.mu * V[0]\n      Y[1] = this.beta * V[0] * V[1] / V.reduce((a,b) => a + b, 0) - (this.gamma + this.mu) * V[1]/(1-this.rho)\n      Y[2] = this.gamma * V[1] - this.mu * V[2]\n\n    return Y\n  }\n\n  private get_params(points) {\n    let rho_scale = d3.scaleLinear()\n      .domain([0, 1])\n      .range(this.rho_range);\n    let v_scale = d3.scaleLinear()\n      .domain([0, 1])\n      .range(this.v_range);\n    let mu_scale = d3.scaleLinear()\n      .domain([0, 1])\n      .range(this.mu_range);\n    let beta_scale = d3.scaleLinear()\n      .domain([0, 1])\n      .range(this.beta_range);\n    let gamma_scale = d3.scaleLinear()\n      .domain([0, 1])\n      .range(this.gamma_range);\n\n    points.forEach( d => {\n        this.params.push([\n            Math.round(rho_scale(d[0]))/100,\n            1/(Math.round(v_scale(d[1]))*365),\n            1/(Math.round(mu_scale(d[2]))*365),\n            beta_scale(d[3]),\n            1/Math.round(gamma_scale(d[4]))\n        ])\n    })\n  }\n}\n","import {autoinject} from 'aurelia-framework';\r\nimport {Sampling} from \"../helper/sampling\"\r\nimport {Sheep} from \"../hosts/sheep\"\r\nimport {Vector} from \"../helper/vector\"\r\nimport * as d3 from \"d3\"\r\nimport * as _ from \"lodash\"\r\n\r\n// This magic line removed the error messages for numeric\r\ndeclare var lobos: any;\r\ndeclare var Noise: any;\r\n\r\n@autoinject\r\nexport class SmallWorld {\r\n  // Grid params\r\n  noise;\r\n  grid_length = 100;\r\n  landscape_grid = [];\r\n  temp_landscape_grid = [];\r\n  host_list = [];\r\n\r\n  // Global params\r\n  max_mating_distance = 1;\r\n  simulation_iterations = 0;\r\n\r\n  constructor(private grid) {\r\n      this.noise = new Noise()\r\n  }\r\n\r\n  get_random_int(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  init_simulation() {\n    // Reset simulation variables\n    this.grid.length = 0;\n    this.simulation_iterations = 0;\n\n    // Create noisemap for the landscape\n    let noise_map = [];\n    this.noise.seed(Math.random());\n\n    for(let i = 0; i < this.grid_length; i++) {\n      let temp = []\n      for(let j = 0; j < this.grid_length; j++) {\n        temp[j] = this.noise.simplex2(i/50, j/50)\n      }\n      noise_map.push(temp)\n    }\r\n\r\n    // Initilize landscape and host grids\r\n    for(let i = 0; i < this.grid_length; i++) {\r\n      let temp_landscape = []\r\n\r\n      for(let j = 0; j < this.grid_length; j++) {\r\n        // Landscape\r\n        let value = \"grass\"\r\n        if(noise_map[i][j] <= 0) {\r\n          value = \"grass_fresh\";\r\n        }\r\n        else {\r\n          value = \"dirt\"\r\n        }\r\n        temp_landscape[j] = value;\r\n      }\r\n      this.landscape_grid.push(temp_landscape)\r\n    }\r\n\r\n    // Add initial hosts\r\n    let found = false;\r\n    // Find grass area\r\n    while(!found) {\r\n      let x = this.get_random_int(0,this.grid_length-1);\r\n      let y = this.get_random_int(0,this.grid_length-1)\r\n      if(this.landscape_grid[x][y] == \"grass_fresh\") {\r\n        found = true;\r\n\r\n        this.host_list.push(new Sheep(new Vector(x, y)));\r\n        this.host_list.push(new Sheep(new Vector(x-1, y)));\r\n        this.host_list.push(new Sheep(new Vector(x+1, y)));\r\n        this.host_list.push(new Sheep(new Vector(x, y+1)));\r\n        this.host_list.push(new Sheep(new Vector(x, y-1)));\r\n        this.host_list.push(new Sheep(new Vector(x+1, y+1)));\r\n        this.host_list.push(new Sheep(new Vector(x+2, y+1)));\r\n        this.host_list.push(new Sheep(new Vector(x+2, y)));\r\n        this.host_list.push(new Sheep(new Vector(x-1, y-1)));\r\n      }\r\n    }\r\n\r\n    // Add initial data to grid\r\n    for(let i = 0; i < this.grid_length; i++) {\r\n      this.grid.push(_.clone(this.landscape_grid[i]))\r\n    }\r\n\r\n    // Add hosts\r\n    for (var host of this.host_list) {\r\n      this.grid[this.get_bounded_index(this.grid.length, host.position.x)][this.get_bounded_index(this.grid.length, host.position.y)] = host.type;\r\n    }\r\n  }\r\n\r\n  update_grid() {\r\n    this.landscape_grid.length = 0;\r\n    this.grid.length = 0;\r\n\r\n    for(let i = 0; i < this.grid_length; i++) {\r\n      // Copy temp to working grids\r\n      this.landscape_grid.push(_.clone(this.temp_landscape_grid[i]))\r\n\r\n      // Add landscape changes\r\n      this.grid.push(_.clone(this.landscape_grid[i]))\r\n    }\r\n\r\n    // Add host changes\r\n    // for(var i = this.host_list.length -1; i >= 0 ; i--){\r\n    //   // Remove dead hosts\r\n    //   if(this.host_list[i].dead){\r\n    //       this.host_list.splice(i, 1);\r\n    //   }\r\n    //   else {\r\n    //     // Update host position\r\n    //     this.host_list[i].position = _.cloneDeep(this.host_list[i].next_position);\r\n    //     this.grid[this.host_list[i].position.x][this.host_list[i].position.y] = this.host_list[i].type;\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  run_iteration() {\r\n    // Create temporary grid for this iteration\r\n    this.temp_landscape_grid = _.cloneDeep(this.landscape_grid);\r\n\r\n    // Go through all hosts\r\n    for(let host of this.host_list) {\r\n      host.simulate(this.temp_landscape_grid, this.host_list);\r\n    }\r\n\r\n    // Update grid\r\n    this.update_grid();\r\n\r\n    // Resolve deciscions\r\n    this.resolve()\r\n\r\n    // Increase simulation counter\r\n    this.simulation_iterations++;\r\n  }\r\n\r\n  resolve() {\r\n    let current_state= new Set();\r\n    let conflicts = new Map();\r\n    let speeds = [];\r\n    let hosts_at_position = []\r\n\r\n    // Sort hosts by speed (ascending)\r\n    this.host_list.sort((a, b) => a.current_speed - b.current_speed);\r\n\r\n    // Find conflicts and remove dead hosts\r\n    for(var i = this.host_list.length -1; i >= 0 ; i--){\r\n      // Remove dead hosts\r\n      if(this.host_list[i].dead){\r\n        this.host_list.splice(i, 1);\r\n      }\r\n      else {\r\n        let host = this.host_list[i];\r\n        let position = host.position.toString();\r\n        let next_position = host.next_position.toString();\r\n\r\n        // Add speed to the speeds array\r\n        if(!speeds.includes(host.current_speed)) speeds.push(host.current_speed)\r\n\r\n        // Get current state\r\n        current_state.add(position)\r\n\r\n        // Get conflicts\r\n        if(conflicts.has(next_position)) {\r\n          hosts_at_position = conflicts.get(next_position);\r\n          hosts_at_position.push(host)\r\n\r\n          conflicts.set(next_position, hosts_at_position)\r\n        }\r\n        else {\r\n          conflicts.set(next_position, [host])\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(\"New\")\r\n    // Resolve conflicts and update positions\r\n    speeds.sort((a, b) => b - a).forEach(speed => {\r\n      conflicts.forEach((value, key) => {\r\n        let temp = value.filter( x => x.current_speed == speed)\r\n\r\n        // Resolve cases\r\n        if(temp.length == 1 && current_state.has(key)) {\r\n          // No conflict but at target position is somewhere else\r\n          this.move_host_until_contact(current_state, key, temp[0])\r\n          this.remove_resolved(conflicts, key, value, temp[0])\r\n        }\r\n        else if(temp.length == 1 && !current_state.has(key)) {\r\n          // Update current state\r\n          this.move_host(current_state, key, temp[0])\r\n          this.remove_resolved(conflicts, key, value, temp[0])\r\n        }\r\n        else if(temp.length > 1 && !current_state.has(key)) {\r\n          // Get random host\r\n          let index = Math.floor(Math.random()*temp.length);\r\n          let host = temp.splice(index, 1)[0];\r\n\r\n          // Move random host\r\n          this.move_host(current_state, key, host)\r\n          this.remove_resolved(conflicts, key, value, host)\r\n\r\n          // Move remaining hosts\r\n          // TODO: Random drawing\r\n          for(let i = 0; i < temp.length; i++) {\r\n            host = temp[i];\r\n\r\n            this.move_host_until_contact(current_state, key, host)\r\n            this.remove_resolved(conflicts, key, value, host)\r\n          }\r\n        }\r\n        else if(temp.length > 1 && current_state.has(key)) {\r\n          // TODO: Random drawing\r\n          for(let i = 0; i < temp.length; i++) {\r\n            let host = temp[i];\r\n\r\n            this.move_host_until_contact(current_state, key, host)\r\n            this.remove_resolved(conflicts, key, value, host)\r\n          }\r\n        }\r\n        // else {\r\n        //   console.log(\"ERROR\")\r\n        //   console.log(key, value, speed, temp)\r\n        // }\r\n      })\r\n    })\r\n  }\r\n\r\n  remove_resolved(conflicts: Map<any, any>, key, value, host) {\r\n    if(value.length > 1) {\r\n      // Get index of resolved host\r\n      let index = value.findIndex(x => x === host)\r\n\r\n      // Remove resolved host\r\n      value.splice(index, 1)\r\n\r\n      if(value.length == 0) {\r\n        conflicts.delete(key)\r\n      }\r\n    }\r\n    else {\r\n      // Remove position where all conflicts are resolved\r\n      conflicts.delete(key)\r\n    }\r\n\r\n  }\r\n\r\n  move_host(current_state, key, host) {\r\n    // Update current state\r\n    current_state.add(key)\r\n    current_state.delete(host.position.toString())\r\n\r\n    // Move\r\n    host.position = host.next_position.clone();\r\n    this.grid[host.position.x][host.position.y] = host.type;\r\n  }\r\n\r\n  move_host_until_contact(current_state, key, host) {\r\n    // Wait TODO:Move as far as possible\r\n    host.next_position = host.position.clone();\r\n    this.grid[host.position.x][host.position.y] = host.type;\r\n  }\r\n\r\n  get_bounded_index(grid_length, index) {\r\n    let bounded_index = index;\r\n\r\n    if(index < 0) {\r\n      bounded_index = index + grid_length;\r\n    }\r\n    if(index >= grid_length) {\r\n      bounded_index = index - grid_length;\r\n    }\r\n\r\n    return bounded_index\r\n  }\r\n}\r\n","import {autoinject} from 'aurelia-framework';\r\nimport {Sampling} from \"../helper/sampling\"\r\nimport * as d3 from \"d3\"\r\n\r\n// This magic line removed the error messages for numeric\r\ndeclare var lobos: any;\r\n\r\n@autoinject\r\nexport class SpatialMigration {\r\n  params = [];\r\n  time_range = [];\r\n\r\n  p = 0.5;\r\n  simulation_counter = 0;\r\n\r\n  constructor(private max_mating_distance, private grid_length) {\r\n  }\r\n\r\n  get_random_int(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  init_simulation(grid) {\r\n    grid.length = 0;\r\n    this.simulation_counter = 0;\r\n\r\n    for(let i = 0; i < this.grid_length; i++) {\r\n      let temp = []\r\n\r\n      for (var j = 0; j < this.grid_length; j++) {\r\n        let random_number = Math.random();\r\n\r\n        if (random_number < this.p*this.p) {\r\n            temp[j] = \"A1A1\";\r\n        }\r\n        else if (random_number > 1 - (1-this.p) * (1-this.p)) {\r\n            temp[j] = \"A2A2\";\r\n        }\r\n        else {\r\n            temp[j] = \"A1A2\";\r\n        }\r\n      }\r\n\r\n      grid.push(temp)\r\n    }\r\n  }\r\n\r\n  get_bounded_index(index) {\r\n    let bounded_index = index;\r\n\r\n    if(index < 0) {\r\n      bounded_index = index + this.grid_length;\r\n    }\r\n    if(index >= this.grid_length) {\r\n      bounded_index = index - this.grid_length;\r\n    }\r\n\r\n    return bounded_index\r\n  }\r\n\r\n  pick_mating_partner(grid, i, j) {\r\n    let mating_i = this.get_random_int(i - this.max_mating_distance, i + this.max_mating_distance);\r\n    let mating_j = this.get_random_int(j - this.max_mating_distance, j + this.max_mating_distance);\r\n\r\n    mating_i = this.get_bounded_index(mating_i);\r\n    mating_j = this.get_bounded_index(mating_j);\r\n\r\n    return grid[mating_i][mating_j]\r\n  }\r\n\r\n  get_offspring(parent1, parent2) {\r\n      var p1 = parent1;\r\n      var p2 = parent2;\r\n      if (p1 == \"A1A1\" && p2 == \"A1A1\") {\r\n          return \"A1A1\";\r\n      }\r\n      else if ((p1 == \"A1A1\" && p2 == \"A1A2\") || (p1 == \"A1A2\" && p2 == \"A1A1\")) {\r\n          if (Math.random() < 0.5) {\r\n              return \"A1A1\";\r\n          }\r\n          else {\r\n              return \"A1A2\";\r\n          }\r\n      }\r\n      else if ((p1 == \"A1A1\" && p2 == \"A2A2\") || (p1 == \"A2A2\" && p2 == \"A1A1\")) {\r\n          return \"A1A2\";\r\n      }\r\n      else if (p1 == \"A1A2\" && p2 == \"A1A2\") {\r\n          var random_number = Math.random();\r\n          if (random_number < 0.25) {\r\n              return \"A1A1\";\r\n          }\r\n          else if (random_number > 0.75){\r\n              return \"A2A2\";\r\n          }\r\n          else {\r\n              return \"A1A2\";\r\n          }\r\n      }\r\n      else if ((p1 == \"A1A2\" && p2 == \"A2A2\") || (p1 == \"A2A2\" && p2 == \"A1A2\")) {\r\n          if (Math.random() < 0.5) {\r\n              return \"A1A2\";\r\n          }\r\n          else {\r\n              return \"A2A2\";\r\n          }\r\n      }\r\n      else if (p1 == \"A2A2\" && p2 == \"A2A2\") {\r\n          return \"A2A2\";\r\n      }\r\n   }\r\n\r\n   compute_FScore(grid) {\r\n     let A1A1 = 0;\r\n     let A1A2 = 0;\r\n     let A2A2 = 0;\r\n     for (var i = 0; i < this.grid_length; i = i + 1) {\r\n         for (var ii = 0; ii < this.grid_length; ii = ii + 1) {\r\n             if (grid[i][ii] == \"A1A1\") {\r\n                 A1A1 = A1A1 + 1;\r\n             }\r\n             else if (grid[i][ii] == \"A1A2\") {\r\n                 A1A2 = A1A2 + 1;\r\n             }\r\n             else {\r\n                 A2A2 = A2A2 + 1;\r\n             }\r\n         }\r\n     }\r\n\r\n     let N = A1A1 + A1A2 + A2A2;\r\n     let h_o = A1A2 / N;\r\n     let p = ((2 * A1A1) + A1A2) / (2 * N);\r\n     let h_e = 2 * p * (1-p);\r\n     let F = (h_e - h_o) / h_e;\r\n\r\n\r\n     return F;\r\n  }\r\n\r\n  run_simulation(grid, data_lines) {\r\n    let temp_grid = [];\r\n\r\n    for(let i = 0; i < this.grid_length; i++) {\r\n      temp_grid[i] = [];\r\n\r\n      for(let j = 0; j < this.grid_length; j++) {\r\n        // Select mating partner\r\n        let mating_partner = this.pick_mating_partner(grid,i, j);\r\n\r\n        // Return offspring genotype\r\n        temp_grid[i][j] = this.get_offspring(grid[i][j], mating_partner);\r\n      }\r\n    }\r\n\r\n    grid.length = 0;\r\n\r\n    for(let i = 0; i < this.grid_length; i++) {\r\n      let temp = []\r\n      for(let j = 0; j < this.grid_length; j++) {\r\n        temp[j] = temp_grid[i][j]\r\n      }\r\n      grid.push(temp)\r\n    }\r\n\r\n    data_lines.push({x: this.simulation_counter++, F: this.compute_FScore(grid)})\r\n  }\r\n}\r\n","import {autoinject} from 'aurelia-framework';\r\nimport {Sampling} from \"../helper/sampling\"\r\nimport * as d3 from \"d3\"\r\nimport * as _ from \"lodash\"\r\n\r\n// This magic line removed the error messages for numeric\r\ndeclare var lobos: any;\r\n\r\n@autoinject\r\nexport class SpatialSir {\r\n  params = [];\r\n  grids = [];\r\n  simulation_data = [];\r\n  sampling;\r\n\r\n  constructor(private grid_length, private alpha_range, private beta_range, private gamma_range) {\r\n    this.sampling = new Sampling(\"sobol\");\r\n  }\r\n\r\n  compute_model(n_samples, generations) {\r\n    this.simulation_data.length = 0;\r\n    this.grids.length = 0;\r\n\r\n    this.get_params(this.sampling.get_points(n_samples, 3))\r\n\r\n    this.params.forEach( d => {\r\n        let grid = <any[]> [];\r\n\r\n        this.init_simulation(grid)\r\n        this.run_simulation(grid, d, generations)\r\n      })\r\n  }\r\n\r\n  private get_params(points) {\r\n    let alpha_scale = d3.scaleLinear()\r\n      .domain([0, 1])\r\n      .range(this.alpha_range);\r\n    let beta_scale = d3.scaleLinear()\r\n      .domain([0, 1])\r\n      .range(this.beta_range);\r\n    let gamma_scale = d3.scaleLinear()\r\n      .domain([0, 1])\r\n      .range(this.gamma_range);\r\n\r\n    points.forEach( d => {\r\n        this.params.push([\r\n          alpha_scale(d[0]),\r\n          beta_scale(d[1]),\r\n          gamma_scale(d[2])\r\n        ])\r\n    })\r\n  }\r\n\r\n  get_random_int(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  init_simulation(grid) {\r\n    // Fill Grid with initial data\r\n    for(let i = 0; i < this.grid_length; i++) {\r\n      let temp = []\r\n\r\n      for (var j = 0; j < this.grid_length; j++) {\r\n        temp[j] = \"S\";\r\n      }\r\n\r\n      grid.push(temp)\r\n    }\r\n\r\n    grid[this.get_random_int(0,this.grid_length-1)][this.get_random_int(0,this.grid_length-1)] = \"I\";\r\n  }\r\n\r\n  get_bounded_index(index) {\r\n    let bounded_index = index;\r\n\r\n    if(index < 0) {\r\n      bounded_index = index + this.grid_length;\r\n    }\r\n    if(index >= this.grid_length) {\r\n      bounded_index = index - this.grid_length;\r\n    }\r\n\r\n    return bounded_index\r\n  }\r\n\r\n  expose_neighbours(grid, temp_grid, i, j, params) {\r\n    for(let n_i = i - 1;n_i <= i + 1; n_i++) {\r\n      for(let n_j = j - 1;n_j <= j + 1; n_j++) {\r\n        // Take care of possible selft infection\r\n        if(n_i == i && n_j == j) {\r\n          continue;\r\n        }\r\n\r\n        // Chance of an long distance interaction\r\n        if(Math.random() <= params[0]) {\r\n          let r_i = this.get_random_int(0, this.grid_length -1);\r\n          let r_j = this.get_random_int(0, this.grid_length -1);\r\n\r\n          // Take care of possible selft infection\r\n          if(r_i == i && r_j == j) {\r\n            continue;\r\n          }\r\n          this.infection(grid, temp_grid, this.get_bounded_index(r_i), this.get_bounded_index(r_j), params);\r\n        }\r\n        else {\r\n          this.infection(grid, temp_grid, this.get_bounded_index(n_i), this.get_bounded_index(n_j), params);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  infection(grid, temp_grid, i, j, params) {\r\n    if(grid[i][j] == \"S\") {\r\n      if(Math.random() < params[1]) {\r\n        temp_grid[i][j] = \"I\";\r\n      }\r\n    }\r\n  }\r\n\r\n  recovery(grid, temp_grid,i, j, params) {\r\n    if(grid[i][j] == \"I\") {\r\n      if(Math.random() < params[2]) {\r\n        temp_grid[i][j] = \"R\";\r\n      }\r\n    }\r\n  }\r\n\r\n  run_simulation(grid, params, generations) {\r\n    let simulation = [];\r\n    let steps = []\r\n\r\n    steps.push(_.cloneDeep(grid))\r\n\r\n    for(let i = 0; i < generations - 1; i++) {\r\n      simulation.push(this.run_iteration(grid, params))\r\n      steps.push(_.cloneDeep(grid))\r\n    }\r\n\r\n    this.grids.push(steps)\r\n    this.simulation_data.push(simulation)\r\n  }\r\n\r\n  run_iteration(grid, params) {\r\n    // Duplicate to temp_grid\r\n    let temp_grid = _.cloneDeep(grid);\r\n\r\n    // Simulation\r\n    for(let i = 0; i < this.grid_length; i++) {\r\n      for(let j = 0; j < this.grid_length; j++) {\r\n        // Infect surrounding hosts\r\n        if(grid[i][j] == \"I\") {\r\n          this.expose_neighbours(grid, temp_grid,i, j, params);\r\n          this.recovery(grid, temp_grid,i, j, params);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Update grid with values from temp_grid\r\n    grid.length = 0;\r\n    for(let i = 0; i < this.grid_length; i++) {\r\n      let temp = []\r\n      for(let j = 0; j < this.grid_length; j++) {\r\n        temp[j] = temp_grid[i][j]\r\n      }\r\n      grid.push(temp)\r\n    }\r\n\r\n    let rec = _.filter(_.flatten(grid), function(o) { if (o == \"R\") return o }).length;\r\n    let inf = _.filter(_.flatten(grid), function(o) { if (o == \"I\") return o }).length;\r\n    let sus = _.filter(_.flatten(grid), function(o) { if (o == \"S\") return o }).length;\r\n\r\n    return {rec: rec, inf: inf, sus: sus}\r\n  }\r\n}\r\n","import {autoinject, observable} from 'aurelia-framework';\nimport \"ion-rangeslider\"\nimport {SmallWorld} from \"../models/small-world\"\nimport * as d3 from \"d3\"\n\n@autoinject\nexport class Playground {\n    // Interface params\n    simulation_initialized = true;\n\n    world;\n\n    // Population count\n    grid_selected = 100;\n    mating_selected = 1;\n\n    data_grid = <any[]> []\n\n    current_filter = new Set();\n\n    collapsed_input = false;\n    collapsed_grid = false;\n    collapsed_out = true;\n\n    timeout;\n    redraw;\n\n    constructor() {\n      this.world = new SmallWorld(this.data_grid);\n    }\n\n    switch() {\n      this.collapsed_input = this.collapsed_input == true ? false : true;\n      this.collapsed_grid = this.collapsed_grid == true ? false : true;\n      this.collapsed_out = this.collapsed_out == true ? false : true;\n    }\n\n    attached() {\n        // Attaching range sliders\n        $(\"#mating\").ionRangeSlider({\n            min: 1,\n            max: 100,\n            from: 1,\n            step: 1,\n            type: \"single\",\n            grid: true,\n            grid_num: 10,\n            onFinish: (data) => {\n              this.mating_selected = data[\"from\"]\n        }});\n        $(\"#grid_length\").ionRangeSlider({\n            min: 10,\n            max: 1000,\n            from: 100,\n            step: 1,\n            type: \"single\",\n            grid: true,\n            grid_num: 10,\n            onFinish: (data) => {\n              this.redrawGrid()\n              this.grid_selected = data[\"from\"]\n        }});\n    }\n\n    redrawGrid() {\n        this.redraw = this.redraw == 0 ? 1 : 0;\n    }\n\n    stopSimulation() {\n      clearTimeout(this.timeout);\n    }\n\n    initializeWorld() {\n      this.world.init_simulation()\n      this.simulation_initialized = false;\n    }\n\n    compute() {\n        // Initialize Spatial Migration Simulation\n        // this.world.run_iteration()\n        this.timeout = setInterval( () => {\n          this.world.run_iteration()\n          this.redrawGrid()\n        }, 200)\n      }\n}\n"],"sourceRoot":".."}